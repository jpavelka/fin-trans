{"version":3,"sources":["firebase.js","utils/utils.js","auth/Auth.js","auth/Login.js","table/tableIcons.js","table/Table.js","plot/utils.js","plot/SinglePeriodPlot.js","plot/TrendPlot.js","plot/Plot.js","selections/utils.js","selections/CategoryModal.js","selections/TagModal.js","selections/Selections.js","utils/transactions.js","Home.js","loadData/LoadData.js","nav/Nav.js","edit/EditTransactions.js","App.js","index.js"],"names":["app","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","db","firestore","sortedUniqueArray","_ref","array","reverse","arr","Array","from","Set","sort","AuthContext","React","createContext","monthFormat","AuthProvider","children","minLoadMonth","setMinLoadMonth","useState","maxLoadMonth","setMaxLoadMonth","allListenMonths","setAllListenMonths","txData","setTxData","settings","setSettings","currentUser","setCurrentUser","loadingData","setLoadingData","useEffect","auth","onAuthStateChanged","user","Object","keys","length","collection","where","FieldPath","documentId","onSnapshot","query","newSettings","doc","docs","k","id","data","general","minMonth","dayjs","maxMonth","add","format","month","listenMonths","m","includes","push","filter","newAllListenMonths","concat","newData","transactions","tx","comments","comment","d","_jsx","Provider","value","Login","history","useContext","googleProvider","GoogleAuthProvider","className","onClick","signInWithGoogle","signInWithPopup","then","res","catch","error","console","log","message","tableIcons","Add","forwardRef","props","ref","AddBox","Check","Clear","Delete","DeleteOutline","DetailPanel","ChevronRight","Edit","Export","SaveAlt","Filter","FilterList","FirstPage","LastPage","NextPage","PreviousPage","ChevronLeft","ResetSearch","Search","SortArrow","ArrowDownward","ThirdStateCheck","Remove","ViewColumn","Table","filterValues","tableRef","useRef","columns","title","field","defaultSort","type","col","defaultFilter","amtSum","setAmtSum","numTrx","setNumTrx","setTimeout","current","state","map","t","amount","reduce","a","b","filterChange","MaterialTable","Math","round","toLocaleString","icons","options","filtering","onFilterChange","onSearchChange","getGroupedData","allTx","groupOn","includeAll","thisGroupOn","nextGroupOn","isArray","slice","thisIncludeAll","nextIncludeAll","allGroups","x","groupedData","group","incrementTime","_ref2","timeFrame","time","currencyFormat","Intl","NumberFormat","style","currency","dateFormat","_ref3","dateFormatInv","_ref4","plotColors","getPlotData","plotData","hoverinfo","y","text","cat","getPlotLayout","txType","metaCategory","autosize","hovermode","SinglePeriodPlot","plotTx","setTableFilters","plotLayout","Plot","layout","useResizeHandler","width","height","e","filters","points","minTime","maxTime","includeAverages","catData","entries","catName","yVal","totalY","_cat","_groupOn","name","legendgroup","avgY","avgData","_isAvg","line","dash","showlegend","replace","repeat","traces","i","trace","shading","c","color","fade","rgb","string","addColors","IncludeAvgCheckbox","setIncludeAverages","_jsxs","margin","checked","onChange","target","TrendPlot","_Fragment","date","selectionValues","plotType","sanitize","s","MetaCatCheckBoxes","show","metaCat","metaCategories","checkChanged","setCheckChanged","disabledMetaCategories","setDisabledMetaCategories","marginTop","display","getMetaCatId","defaultChecked","inactiveMetaCategories","changeCheckChanged","catOrMetaCat","key","for","marginLeft","getCatId","inactiveCategories","disabled","metaCats","other","v","thisObj","otherObj","obj","getOptions","originalValue","label","mc","CategoryModal","setShow","setSelectionValues","selectedOption","setSelectedOption","cats","selS","handleClose","Modal","Header","Body","Select","defaultValue","opt","Footer","imc","ic","TagModal","allTags","originalStatuses","tag","requiredTags","forbiddenTags","statuses","setStatuses","statusesToSet","textAlign","padding","newObj","DropdownFromList","selectionKey","changeSelectionValue","val","setValueFunc","newMinTime","newTime","newValue","Selections","allMetaCats","allTimes","showCategoryModal","setShowCategoryModal","showTagModal","setShowTagModal","dropdownArgs","categoryChanges","lastInd","getDropdownArgs","content","selGroup","selGroupContent","sel","extraContent","marginRight","amortize","transformTransactions","categoriesToChange","metaCatInverse","amortizeTx","category","tags","split","toLowerCase","trim","year","parseInt","skipIfAmortize","newVals","skipIfNoAmortize","abs","Home","metaCatVersion","undefined","categoryChangeVersion","plotTypeFull","tableFilters","waitForLoad","setWaitForLoad","_default","allTimesBetween","window","confirm","signOut","Accordion","defaultActiveKey","Toggle","eventKey","Collapse","monthsRef","uploadData","async","Date","parse","toISOString","substring","allMonths","oldMonthTx","newMonthTx","getMonthObject","set","merge","alert","queryForMonthObject","get","exists","newMonthFunc","generalSettingsRef","LoadData","CSVReader","cssClass","parserOptions","header","dynamicTyping","skipEmptyLines","transformHeader","onFileLoaded","onError","NavMenu","Navbar","bg","variant","expand","Brand","as","Link","to","Nav","EditTransactions","modifiedMonths","setModifiedMonths","getTableDataFromTxData","tData","dArray","values","join","tableData","setTableData","saveChanges","monthData","Prompt","when","editable","onRowAdd","Promise","resolve","reject","onRowUpdate","oldData","dataUpdate","onRowDelete","dataDelete","index","splice","App","Router","Switch","Route","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5b74e9ef.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\n\nconst app = firebase.initializeApp({\n  apiKey: process.env.REACT_APP_FIREBASE_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_DOMAIN,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_SENDER_ID,\n});\nconst db = firebase.firestore();\n\nexport { app, db };\n","import dayjs from \"dayjs\";\n\nexport const sortedUniqueArray = ({ array, reverse = false }) => {\n  let arr = Array.from(new Set(array)).sort();\n  if (reverse) {\n    return arr.reverse();\n  }\n  return arr;\n};\n\nexport const allTimesBetween = ({\n  minTime,\n  maxTime,\n  timeFrame,\n  reverse = false,\n}) => {\n  let allTimes = [];\n  let time = minTime;\n  while (time <= maxTime) {\n    const t = time;\n    allTimes.push(t);\n    time = dayjs(t + (timeFrame === \"month\" ? \"-01\" : \"-01-01\"))\n      .add(1, timeFrame)\n      .format(timeFrame === \"month\" ? \"YYYY-MM\" : \"YYYY\");\n  }\n  if (reverse){\n    allTimes.reverse()\n  }\n  return allTimes;\n};\n","import firebase from \"firebase/app\";\nimport React, { useEffect, useState } from \"react\";\nimport { app, db } from \"../firebase\";\nimport dayjs from \"dayjs\";\nimport { sortedUniqueArray } from \"../utils/utils\";\n\nexport const AuthContext = React.createContext();\nconst monthFormat = \"YYYY-MM\";\n\nexport const AuthProvider = ({ children }) => {\n  const [minLoadMonth, setMinLoadMonth] = useState();\n  const [maxLoadMonth, setMaxLoadMonth] = useState();\n  const [allListenMonths, setAllListenMonths] = useState([]);\n  const [txData, setTxData] = useState();\n  const [settings, setSettings] = useState({});\n  const [currentUser, setCurrentUser] = useState();\n  const [loadingData, setLoadingData] = useState(true);\n  useEffect(() => {\n    app.auth().onAuthStateChanged((user) => {\n      if (!!user) {\n        setCurrentUser(user);\n        if (Object.keys(settings).length === 0) {\n          db.collection(\"settings\")\n            .where(firebase.firestore.FieldPath.documentId(), \"in\", [\n              \"categoryChanges\",\n              \"metaCategories\",\n              \"general\",\n            ])\n            .onSnapshot((query) => {\n              let newSettings = {};\n              for (let doc of query.docs) {\n                const k = doc.id;\n                const data = doc.data() || {};\n                newSettings[k] = data;\n              }\n              setSettings(newSettings);\n            });\n        }\n        if (!!settings.general) {\n          if (minLoadMonth !== settings.general.minMonth) {\n            setMinLoadMonth(\n              dayjs(settings.general.maxMonth)\n                .add(-11, \"month\")\n                .format(monthFormat)\n            );\n            setMaxLoadMonth(\n              dayjs(settings.general.maxMonth).format(monthFormat)\n            );\n          }\n          let month = dayjs(minLoadMonth + \"-01\").format(monthFormat);\n          let listenMonths = [];\n          while (month <= maxLoadMonth) {\n            const m = month;\n            if (!Object.keys(txData || {}).includes(m)) {\n              listenMonths.push(m);\n            }\n            month = dayjs(month + \"-01\")\n              .add(1, \"month\")\n              .format(monthFormat);\n          }\n          if (\n            listenMonths.filter((m) => !allListenMonths.includes(m)).length > 0\n          ) {\n            const newAllListenMonths = sortedUniqueArray({\n              array: allListenMonths.concat(listenMonths),\n            });\n            db.collection(\"months\")\n              .where(\n                firebase.firestore.FieldPath.documentId(),\n                \">=\",\n                newAllListenMonths[0]\n              )\n              .where(\n                firebase.firestore.FieldPath.documentId(),\n                \"<=\",\n                newAllListenMonths[newAllListenMonths.length - 1]\n              )\n              .onSnapshot((query) => {\n                setLoadingData(true);\n                let newData = {};\n                for (let doc of query.docs) {\n                  const m = doc.id;\n                  const data = doc.data() || {};\n                  let transactions = data.transactions || [];\n                  for (let tx of transactions) {\n                    if (\n                      Object.keys(tx).includes(\"comment\") &&\n                      !Object.keys(tx).includes(\"comments\")\n                    ) {\n                      tx.comments = tx.comment;\n                    }\n                  }\n                  newData[m] = transactions;\n                }\n                setTxData((d) => {\n                  return { ...d, ...newData };\n                });\n                setLoadingData(false);\n              });\n            setAllListenMonths(newAllListenMonths);\n          }\n        }\n      }\n    });\n  }, [minLoadMonth, maxLoadMonth, txData, settings, allListenMonths]);\n  return (\n    <AuthContext.Provider\n      value={{\n        currentUser,\n        txData,\n        setMinLoadMonth,\n        setCurrentUser,\n        settings,\n        minLoadMonth,\n        maxLoadMonth,\n        loadingData,\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nconst signOutFunc = () => {\n  const confirmed = window.confirm(\"Are you sure you want to sign out?\");\n  if (!confirmed) {\n    return;\n  }\n  app.auth().signOut();\n};\n\nexport { signOutFunc };\n","import firebase from \"firebase/app\";\nimport { useContext } from \"react\";\nimport { AuthContext } from \"./Auth\";\n\nconst Login = ({ history }) => {\n  const { currentUser } = useContext(AuthContext);\n  if (!!currentUser) {\n    history.push(\"/fin-trans\");\n  }\n  const auth = firebase.auth();\n  const googleProvider = new firebase.auth.GoogleAuthProvider();\n  const signInWithGoogle = () => {\n    auth\n      .signInWithPopup(googleProvider)\n      .then((res) => {\n        history.push(\"/fin-trans\");\n      })\n      .catch((error) => {\n        console.log(error.message);\n      });\n  };\n  return (\n    <button className=\"login-provider-button\" onClick={signInWithGoogle}>\n      <span>Sign in with Google</span>\n    </button>\n  );\n};\n\nexport default Login;\n","import { forwardRef } from \"react\";\n\nimport AddBox from \"@material-ui/icons/AddBox\";\nimport ArrowDownward from \"@material-ui/icons/ArrowDownward\";\nimport Check from \"@material-ui/icons/Check\";\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\nimport Clear from \"@material-ui/icons/Clear\";\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\nimport Edit from \"@material-ui/icons/Edit\";\nimport FilterList from \"@material-ui/icons/FilterList\";\nimport FirstPage from \"@material-ui/icons/FirstPage\";\nimport LastPage from \"@material-ui/icons/LastPage\";\nimport Remove from \"@material-ui/icons/Remove\";\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\nimport Search from \"@material-ui/icons/Search\";\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\n\nconst tableIcons = {\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n  DetailPanel: forwardRef((props, ref) => (\n    <ChevronRight {...props} ref={ref} />\n  )),\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n  PreviousPage: forwardRef((props, ref) => (\n    <ChevronLeft {...props} ref={ref} />\n  )),\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n  SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\n};\n\nexport default tableIcons;\n","import MaterialTable from \"material-table\";\nimport React, { useRef, useState, useEffect } from \"react\";\nimport tableIcons from \"./tableIcons\";\n\nconst Table = ({ transactions, filterValues = {} }) => {\n  const tableRef = useRef(null);\n  const columns = [\n    { title: \"Date\", field: \"date\", defaultSort: \"desc\" },\n    { title: \"Amount\", field: \"amount\", type: \"currency\" },\n    { title: \"Category\", field: \"category\" },\n    { title: \"Meta Category\", field: \"metaCategory\" },\n    { title: \"Account\", field: \"account\" },\n    { title: \"Tags\", field: \"tags\" },\n    { title: \"Description\", field: \"description\" },\n    { title: \"Comments\", field: \"comments\" },\n  ];\n  for (let col of columns) {\n    if (Object.keys(filterValues).includes(col.field)) {\n      col.defaultFilter = filterValues[col.field];\n    }\n  }\n  const [amtSum, setAmtSum] = useState(0);\n  const [numTrx, setNumTrx] = useState(0);\n  useEffect(() => {\n    setTimeout(() => {\n      setAmtSum((!!tableRef.current ? tableRef.current.state.data : transactions).map(t => t.amount).reduce((a,b) => a + b));\n      setNumTrx((!!tableRef.current ? tableRef.current.state.data : transactions).length);\n    }, 100)\n  }, [transactions, filterValues])\n\n  const filterChange = () => {\n    setAmtSum(tableRef.current.state.data.map(t => t.amount).reduce((a,b) => a + b, 0));\n    setNumTrx(tableRef.current.state.data.length);\n  }\n  return (\n    <div>\n      <MaterialTable\n        title={`$${(Math.round(100 * amtSum, 2) / 100).toLocaleString()} (${numTrx} transactions)`}\n        tableRef={tableRef}\n        data={transactions}\n        columns={columns}\n        icons={tableIcons}\n        options={{ filtering: true }}\n        onFilterChange={filterChange}\n        onSearchChange={filterChange}\n      />\n    </div>\n  );\n};\n\nexport default Table;\n","import dayjs from \"dayjs\";\nimport color from \"color\";\nimport { sortedUniqueArray } from \"../utils/utils\";\n\nexport const getGroupedData = ({ allTx, groupOn, includeAll }) => {\n  const [thisGroupOn, nextGroupOn] = Array.isArray(groupOn)\n    ? [groupOn[0], groupOn.slice(1)]\n    : [groupOn, []];\n  const [thisIncludeAll, nextIncludeAll] = Array.isArray(includeAll)\n    ? [includeAll[0], includeAll.slice(1)]\n    : [includeAll, []];\n  const allGroups = sortedUniqueArray({\n    array: allTx.map((x) => x[thisGroupOn]),\n  });\n  let groupedData = {};\n  for (const group of allGroups) {\n    groupedData[group] = [];\n  }\n  for (const tx of allTx) {\n    groupedData[tx[thisGroupOn]].push(tx);\n  }\n  if (thisIncludeAll) {\n    groupedData[\"_all\"] = allTx;\n  }\n  if (nextGroupOn.length > 0) {\n    for (const group of Object.keys(groupedData)) {\n      groupedData[group] = getGroupedData({\n        allTx: groupedData[group],\n        groupOn: nextGroupOn,\n        includeAll: nextIncludeAll,\n      });\n    }\n  }\n  return groupedData;\n};\n\nexport const incrementTime = ({ timeFrame, time }) => {\n  return timeFrame === \"month\"\n    ? dayjs(time + \"-01\")\n        .add(1, \"month\")\n        .format(\"YYYY-MM\")\n    : dayjs(time + \"-01-01\")\n        .add(1, \"year\")\n        .format(\"YYYY\");\n};\n\nexport const currencyFormat = (x) => {\n  var formatter = new Intl.NumberFormat(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\",\n  });\n  return formatter.format(x);\n};\n\nexport const dateFormat = ({ d, timeFrame }) => {\n  return timeFrame === \"month\" ? dayjs(d + \"-01\").format(\"MMM YYYY\") : d;\n};\n\nexport const dateFormatInv = ({ d, timeFrame }) => {\n  return timeFrame === \"month\" ? dayjs(\"1 \" + d).format(\"YYYY-MM\") : d;\n};\n\nexport const plotColors = [\n  \"#1f77b4\",\n  \"#ff7f0e\",\n  \"#2ca02c\",\n  \"#d62728\",\n  \"#9467bd\",\n  \"#8c564b\",\n  \"#e377c2\",\n  \"#7f7f7f\",\n  \"#bcbd22\",\n  \"#17becf\",\n];\n\nexport const addColors = (traces) => {\n  let i = 0;\n  for (const trace of traces) {\n    trace.line = trace.line || {};\n    let shading = 0;\n    if (trace._isAvg) {\n      i -= 1;\n      shading = 0.5;\n    }\n    const c = color(plotColors[i % plotColors.length]);\n    trace.line.color = c.fade(shading).rgb().string();\n    i += 1;\n  }\n  return traces;\n};\n","import Plot from \"react-plotly.js\";\nimport { sortedUniqueArray } from \"../utils/utils.js\";\nimport { currencyFormat, dateFormat, getGroupedData } from \"./utils.js\";\n\nexport const SinglePeriodPlot = ({\n  plotTx,\n  metaCategory,\n  timeFrame,\n  time,\n  txType,\n  setTableFilters\n}) => {\n  const groupOn = metaCategory === \"_all\" ? \"metaCategory\" : \"category\";\n  const groupedData = getGroupedData({\n    allTx: plotTx,\n    groupOn: [groupOn],\n    includeAll: [false],\n  });\n  const plotData = getPlotData({ groupedData: groupedData });\n  const plotLayout = getPlotLayout({\n    timeFrame: timeFrame,\n    time: time,\n    txType: txType,\n    metaCategory: metaCategory,\n  });\n  return (\n    <Plot\n      layout={plotLayout}\n      data={plotData}\n      useResizeHandler={true}\n      style={{ width: \"100%\", height: \"100%\" }}\n      onClick={(e) => {\n        let filters = {}\n        filters[groupOn] = e.points[0].x;\n        setTableFilters(filters);\n      }}\n    />\n  );\n};\n\nconst getPlotData = ({ groupedData }) => {\n  let plotData = {\n    type: \"bar\",\n    hoverinfo: \"text\",\n    x: [],\n    y: [],\n    text: [],\n  };\n  for (const cat of sortedUniqueArray({ array: Object.keys(groupedData) })) {\n    const data = groupedData[cat];\n    const y = data.map((d) => d.amount).reduce((a, b) => a + b, 0);\n    plotData.x.push(cat);\n    plotData.y.push(y);\n    plotData.text.push(`${cat}<br>${currencyFormat(y)}`);\n  }\n  return [plotData];\n};\n\nconst getPlotLayout = ({ timeFrame, time, txType, metaCategory }) => {\n  const title = `${metaCategory === '_all' ? 'All' : metaCategory} ${\n    txType === \"expense\" ? \"Expenses\" : \"Income\"\n  } - ${dateFormat({ d: time, timeFrame: timeFrame })}`;\n  return {\n    title: title,\n    autosize: true,\n    hovermode: \"closest\",\n  };\n};\n\nexport default SinglePeriodPlot;\n","import { useState } from \"react\";\nimport Plot from \"react-plotly.js\";\nimport {\n  getGroupedData,\n  dateFormat,\n  dateFormatInv,\n  currencyFormat,\n  incrementTime,\n  addColors,\n} from \"./utils\";\n\nconst TrendPlot = ({\n  plotTx,\n  txType,\n  metaCategory,\n  timeFrame,\n  minTime,\n  maxTime,\n  setTableFilters,\n}) => {\n  const [includeAverages, setIncludeAverages] = useState(true);\n  const groupOn = metaCategory === \"_all\" ? \"metaCategory\" : \"category\";\n  const groupedData = getGroupedData({\n    allTx: plotTx,\n    groupOn: [groupOn, timeFrame],\n    includeAll: [true, false],\n  });\n  const plotData = getPlotData({\n    groupedData: groupedData,\n    groupOn: groupOn,\n    timeFrame: timeFrame,\n    minTime: minTime,\n    maxTime: maxTime,\n    includeAverages: includeAverages,\n  });\n  const plotLayout = getPlotLayout({\n    timeFrame: timeFrame,\n    minTime: minTime,\n    maxTime: maxTime,\n    txType: txType,\n    metaCategory: metaCategory,\n  });\n  return (\n    <>\n      <IncludeAvgCheckbox includeAverages={includeAverages} setIncludeAverages={setIncludeAverages} />\n      <Plot\n        layout={plotLayout}\n        data={plotData}\n        useResizeHandler={true}\n        style={{ width: \"100%\", height: \"100%\" }}\n        onClick={(e) => {\n          const data = e.points[0].data;\n          if (data._isAvg) {\n            return;\n          }\n          let filters = {\n            date: dateFormatInv({ d: e.points[0].x, timeFrame: timeFrame }),\n          };\n          if (data._cat !== \"_all\") {\n            filters[groupOn] = data._cat;\n          }\n          setTableFilters(filters);\n        }}\n      />\n    </>\n  );\n};\n\nconst getPlotLayout = ({\n  timeFrame,\n  minTime,\n  maxTime,\n  txType,\n  metaCategory,\n}) => {\n  const title = `${timeFrame === \"month\" ? \"Month\" : \"Year\"}ly Trends - ${\n    txType === \"expense\" ? \"Expenses\" : \"Income\"\n  }${metaCategory === \"_all\" ? \"\" : \" - \" + metaCategory}`;\n  const subTitle = `${dateFormat({\n    d: minTime,\n    timeFrame: timeFrame,\n  })} - ${dateFormat({ d: maxTime, timeFrame: timeFrame })}`;\n  return {\n    title: `${title}<br><sub>${subTitle}</sub>`,\n    autosize: true,\n    hovermode: \"closest\",\n  };\n};\n\nconst getPlotData = ({\n  groupedData,\n  groupOn,\n  timeFrame,\n  minTime,\n  maxTime,\n  includeAverages,\n}) => {\n  let plotData = [];\n  for (const [cat, catData] of Object.entries(groupedData)) {\n    let time = minTime;\n    let x = [];\n    let y = [];\n    let text = [];\n    const catName = cat === \"_all\" ? \"Total\" : cat;\n    while (time <= maxTime) {\n      x.push(dateFormat({ d: time, timeFrame: timeFrame }));\n      let yVal = 0;\n      for (const tx of catData[time] || []) {\n        yVal += tx.amount;\n      }\n      y.push(yVal);\n      text.push(\n        `${catName}<br>${dateFormat({\n          d: time,\n          timeFrame: timeFrame,\n        })}<br>${currencyFormat(yVal)}`\n      );\n      time = incrementTime({ timeFrame: timeFrame, time: time });\n    }\n    const totalY = y.reduce((a, b) => a + b, 0);\n    const newData = {\n      _cat: cat,\n      _groupOn: groupOn,\n      name: `${catName} - ${currencyFormat(totalY)}`,\n      legendgroup: cat,\n      type: \"scatter\",\n      hoverinfo: \"text\",\n      text: text,\n      x: x,\n      y: y,\n    };\n    plotData.push(newData);\n    if (includeAverages) {\n      const avgY = totalY / newData.y.length;\n      const avgData = {\n        ...newData,\n        ...{\n          _cat: newData._cat + \"_avg\",\n          _isAvg: true,\n          line: {dash: 'dash'},\n          showlegend: false,\n          text: `Avg. ${catName}<br>${currencyFormat(avgY)}`,\n          y: newData.y.map((y) => avgY),\n        },\n      };\n      plotData.push(avgData);\n    }\n  }\n  plotData = plotData.sort((a, b) => {\n    [a, b] = [a, b].map((x) => x._cat.replace(\"_\", \"A\".repeat(10)));\n    return a < b ? -1 : 1;\n  });\n  plotData = addColors(plotData);\n  return plotData;\n};\n\nconst IncludeAvgCheckbox = ({ includeAverages, setIncludeAverages }) => {\n  return (\n    <div style={{ margin: \"5pt 10pt\" }}>\n      {`Include Avg. `}\n      <input\n        type=\"checkbox\"\n        checked={includeAverages}\n        onChange={(e) => setIncludeAverages(e.target.checked)}\n      />\n    </div>\n  );\n};\n\nexport default TrendPlot;\n","import React from \"react\";\nimport SinglePeriodPlot from \"./SinglePeriodPlot\";\nimport TrendPlot from \"./TrendPlot\";\n\nconst Plot = ({ plotTx, selectionValues, setTableFilters }) => {\n  return (\n    <div style={{ height: \"550px\" }}>\n      {selectionValues.plotType === \"trend\" ? (\n        <TrendPlot\n          plotTx={plotTx}\n          txType={selectionValues.txType}\n          metaCategory={selectionValues.metaCategory}\n          timeFrame={selectionValues.timeFrame}\n          minTime={selectionValues.minTime}\n          maxTime={selectionValues.maxTime}\n          setTableFilters={setTableFilters}\n        />\n      ) : (\n        <SinglePeriodPlot\n          plotTx={plotTx}\n          txType={selectionValues.txType}\n          metaCategory={selectionValues.metaCategory}\n          timeFrame={selectionValues.timeFrame}\n          time={selectionValues.maxTime}\n          setTableFilters={setTableFilters}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Plot;\n","export const getDropdownArgs = ({\n  settings,\n  allMetaCats,\n  selectionValues,\n  allTimes,\n}) => {\n  const dropdownArgs = [\n    [\n      {\n        label: \"Category Grouping\",\n        options: Object.keys(settings.metaCategories).filter(\n          (mc) => mc !== \"_default\"\n        ),\n        selectionKey: \"metaCatVersion\",\n      },\n      {\n        label: \"Category Changes\",\n        options: Object.keys(settings.categoryChanges).filter(\n          (mc) => mc !== \"_default\"\n        ),\n        selectionKey: \"categoryChangeVersion\",\n      },\n    ],\n    [\n      {\n        label: \"Plot Type\",\n        options: [\n          { value: \"monthTrend\", label: \"Month Trend\" },\n          { value: \"singleMonth\", label: \"Single Month\" },\n          { value: \"yearTrend\", label: \"Year Trend\" },\n          { value: \"singleYear\", label: \"Month Year\" },\n        ],\n        selectionKey: \"plotTypeFull\",\n      }\n    ]\n  ];\n  const lastInd = dropdownArgs.length - 1;\n  if (selectionValues.plotType === \"trend\") {\n    dropdownArgs[lastInd] = dropdownArgs[lastInd].concat([\n      {\n        label: `Start ${\n          selectionValues.timeFrame === \"month\" ? \"Month\" : \"Year\"\n        }`,\n        options: allTimes,\n        selectionKey: \"minTime\",\n      },\n      {\n        label: `End ${\n          selectionValues.timeFrame === \"month\" ? \"Month\" : \"Year\"\n        }`,\n        options: allTimes,\n        selectionKey: \"maxTime\",\n      },\n    ]);\n  } else {\n    dropdownArgs[lastInd] = dropdownArgs[lastInd].concat([\n      {\n        label: selectionValues.timeFrame === \"month\" ? \"Month\" : \"Year\",\n        options: allTimes,\n        selectionKey: \"maxTime\",\n      },\n    ]);\n  }\n  dropdownArgs.push(\n    [{\n      label: \"Meta Category\",\n      options: allMetaCats,\n      selectionKey: \"metaCategory\"\n    }]\n  )\n  return dropdownArgs;\n};\n\nexport const sanitize = (s) => {\n  return s.replace(\"-\", \"\").replace(\"/\", \"\").replace(\" \", \"\");\n};\n","import React, { useState } from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Select from \"react-select\";\nimport { sanitize } from \"./utils\";\nimport { sortedUniqueArray } from \"../utils/utils\";\n\nconst CategoryModal = ({\n  show,\n  setShow,\n  metaCategories,\n  selectionValues,\n  setSelectionValues,\n}) => {\n  const options = getOptions(metaCategories);\n  const [selectedOption, setSelectedOption] = useState(options[0]);\n  const [disabledMetaCategories, setDisabledMetaCategories] = useState([]);\n  const [checkChanged, setCheckChanged] = useState({\n    metaCats: {},\n    cats: {},\n  });\n  const selS = selectedOption.originalValue;\n  const handleClose = () => {\n    setCheckChanged({ metaCats: {}, cats: {} });\n    setShow(false);\n  };\n  return (\n    <div>\n      <Modal show={show}>\n        <Modal.Header>\n          <h3>Category Detail</h3>\n        </Modal.Header>\n        <Modal.Body>\n          Select a meta-category\n          <Select\n            options={options}\n            defaultValue={selectedOption}\n            onChange={(opt) => setSelectedOption(opt)}\n          ></Select>\n          {Object.keys(metaCategories).map((mc) => {\n            return (\n              <MetaCatCheckBoxes\n                metaCat={mc}\n                metaCategories={metaCategories}\n                checkChanged={checkChanged}\n                setCheckChanged={setCheckChanged}\n                selectionValues={selectionValues}\n                disabledMetaCategories={disabledMetaCategories}\n                setDisabledMetaCategories={setDisabledMetaCategories}\n                show={mc === selS}\n              />\n            );\n          })}\n        </Modal.Body>\n        <Modal.Footer>\n          <button\n            onClick={() => {\n              setSelectionValues((v) => {\n                let imc = v.inactiveMetaCategories;\n                for (const mc of Object.keys(checkChanged.metaCats)) {\n                  if (checkChanged.metaCats[mc]) {\n                    if (imc.includes(mc)) {\n                      imc = imc.filter((x) => x !== mc);\n                    } else {\n                      imc.push(mc);\n                    }\n                  }\n                }\n                let ic = v.inactiveCategories;\n                for (const c of Object.keys(checkChanged.cats)) {\n                  if (checkChanged.cats[c]) {\n                    if (ic.includes(c)) {\n                      ic = ic.filter((x) => x !== c);\n                    } else {\n                      ic.push(c);\n                    }\n                  }\n                }\n                return {\n                  ...v,\n                  ...{ inactiveMetaCategories: imc, inactiveCategories: ic },\n                };\n              });\n              handleClose();\n            }}\n          >\n            Save\n          </button>\n          <button onClick={() => handleClose()}>Cancel</button>\n        </Modal.Footer>\n      </Modal>\n    </div>\n  );\n};\n\nconst MetaCatCheckBoxes = ({\n  show,\n  metaCat,\n  metaCategories,\n  checkChanged,\n  setCheckChanged,\n  selectionValues,\n  disabledMetaCategories,\n  setDisabledMetaCategories,\n}) => {\n  return (\n    <div\n      style={{ ...{ marginTop: \"5pt\" }, ...(show ? {} : { display: \"none\" }) }}\n    >\n      <input\n        type=\"checkbox\"\n        id={getMetaCatId(metaCat)}\n        defaultChecked={\n          !selectionValues.inactiveMetaCategories.includes(metaCat)\n        }\n        onChange={(e) => {\n          changeCheckChanged({\n            catOrMetaCat: \"metaCats\",\n            key: metaCat,\n            setCheckChanged: setCheckChanged,\n          });\n        }}\n      />\n      <label for={getMetaCatId(metaCat)}>&nbsp;&nbsp;{metaCat}</label>\n      <div style={{ marginLeft: \"5pt\" }}>\n        {metaCategories[metaCat].map((x) => {\n          return (\n            <div>\n              <input\n                id={getCatId(x)}\n                type=\"checkbox\"\n                defaultChecked={!selectionValues.inactiveCategories.includes(x)}\n                disabled={\n                  (selectionValues.inactiveMetaCategories.includes(metaCat) &&\n                    !checkChanged.metaCats[metaCat]) ||\n                  (!selectionValues.inactiveMetaCategories.includes(metaCat) &&\n                    !!checkChanged.metaCats[metaCat])\n                }\n                onChange={() =>\n                  changeCheckChanged({\n                    catOrMetaCat: \"cats\",\n                    key: x,\n                    setCheckChanged: setCheckChanged,\n                  })\n                }\n              />\n              <label for={getCatId(x)}>&nbsp;&nbsp;{x}</label>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nconst changeCheckChanged = ({ catOrMetaCat, key, setCheckChanged }) => {\n  const other = catOrMetaCat === \"cats\" ? \"metaCats\" : \"cats\";\n  setCheckChanged((v) => {\n    let thisObj = v[catOrMetaCat];\n    const otherObj = v[other];\n    thisObj[key] = !thisObj[key];\n    let obj = {};\n    obj[catOrMetaCat] = thisObj;\n    obj[other] = otherObj;\n    return obj;\n  });\n};\n\nconst getOptions = (metaCategories) => {\n  return sortedUniqueArray({ array: Object.keys(metaCategories) }).map((c) => {\n    return {\n      originalValue: c,\n      value: sanitize(c),\n      label: c,\n    };\n  });\n};\n\nconst getMetaCatId = (mc) => {\n  return `${sanitize(mc)}MetaCatSel`;\n};\n\nconst getCatId = (c) => {\n  return `${sanitize(c)}CatSel`;\n};\n\nexport default CategoryModal;\n","import React, { useState } from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nconst TagModal = ({show, setShow, selectionValues, setSelectionValues, allTags}) => {\n    const originalStatuses = {}\n    for (const tag of allTags){\n        originalStatuses[tag] = selectionValues.requiredTags.includes(tag) ? 'must' : (\n            selectionValues.forbiddenTags.includes(tag) ? 'cannot' : 'can'\n        )\n    }\n    const [statuses, setStatuses] = useState(originalStatuses)\n    const handleClose = (statusesToSet) => {\n        setSelectionValues(v => {\n            let newObj = {\n                requiredTags: Object.keys(statusesToSet).filter(t => statusesToSet[t] === 'must'),\n                forbiddenTags: Object.keys(statusesToSet).filter(t => statusesToSet[t] === 'cannot')\n            }\n            return {...v, ...newObj}\n        })\n        setShow(false)\n    }\n    return (\n        <div>\n      <Modal show={show}>\n        <Modal.Header>\n          <h3>Tag Detail</h3>\n        </Modal.Header>\n        <Modal.Body>\n            <table>\n                <thead>\n                    <tr>\n                    <td></td>\n                    {['Can Have', 'Must Have', \"Can't Have\"].map(s => {\n                        return <td style={{textAlign: 'center', padding: '5pt'}}>{s}</td>\n                    })}\n                    </tr>\n                </thead>\n                <tbody>\n                    {allTags.map(tag => {\n                        return(\n                            <tr>\n                                <td>{tag}</td>\n                                {['can', 'must', 'cannot'].map(v => {\n                                    const checked = (statuses[tag] || 'can') === v\n                                    return(<td style={{textAlign: 'center'}}>\n                                        <input type='radio' name={tag} value={v} defaultChecked={checked} onChange={(e) => {\n                                            setStatuses(s => {\n                                                let newObj = {}\n                                                newObj[e.target.name] = e.target.value;\n                                                return {...s, ...newObj}\n                                            })\n                                        }}/>\n                                    </td>)\n                                })}\n                            </tr>\n                        )\n                    })}\n                </tbody>\n            </table>\n        </Modal.Body>\n        <Modal.Footer>\n          <button\n            onClick={() => handleClose(statuses)}\n          >\n            Save\n          </button>\n          <button onClick={() => handleClose(originalStatuses)}>Cancel</button>\n        </Modal.Footer>\n      </Modal>\n    </div>\n    )\n}\n\nexport default TagModal\n","import React, { useContext, useState } from \"react\";\nimport Select from \"react-select\";\nimport { AuthContext } from \"../auth/Auth\";\nimport CategoryModal from \"./CategoryModal\";\nimport TagModal from \"./TagModal\";\nimport { getDropdownArgs, sanitize } from \"./utils\";\n\nconst Selections = ({\n  selectionValues,\n  setSelectionValues,\n  allMetaCats,\n  allTimes,\n  metaCategories,\n  allTags,\n}) => {\n  const { settings, minLoadMonth, setMinLoadMonth } = useContext(AuthContext);\n  const [showCategoryModal, setShowCategoryModal] = useState(false);\n  const [showTagModal, setShowTagModal] = useState(false);\n  allMetaCats = [{ value: \"_all\", label: \"All\" }].concat(allMetaCats);\n  const dropdownArgs = getDropdownArgs({\n    settings: settings,\n    allMetaCats: allMetaCats,\n    selectionValues: selectionValues,\n    allTimes: allTimes,\n  });\n  const content = dropdownArgs.map((selGroup) => {\n    const selGroupContent = selGroup.map((sel) => {\n      return (\n        <DropdownFromList\n          key={sel.selectionKey}\n          selectionValues={selectionValues}\n          setSelectionValues={setSelectionValues}\n          minLoadMonth={minLoadMonth}\n          setMinLoadMonth={setMinLoadMonth}\n          {...sel}\n        />\n      );\n    });\n    return (\n      <div\n        style={{ display: \"flex\", marginTop: \"5pt\" }}\n        key={selGroup[0].selectionKey}\n      >\n        {selGroupContent}\n      </div>\n    );\n  });\n  const extraContent = (\n    <div style={{ margin: \"10pt\" }}>\n      <button\n        onClick={() => setShowCategoryModal(true)}\n        style={{ marginRight: \"5pt\" }}\n      >\n        Category Detail\n      </button>\n      <button onClick={() => setShowTagModal(true)}>Tag Detail</button>\n      <span style={{marginLeft: '0.5rem'}}>\n        <input\n          type=\"checkbox\"\n          id={\"selectAmortizeCheckbox\"}\n          defaultChecked={selectionValues.amortize}\n          onChange={() => {\n            changeSelectionValue({\n              key: \"amortize\",\n              val: !selectionValues.amortize,\n              setValueFunc: setSelectionValues,\n            });\n          }}\n        />\n        <label for={\"selectAmortizeCheckbox\"}>&nbsp;&nbsp;Use Amortization</label>\n      </span>\n      <CategoryModal\n        show={showCategoryModal}\n        setShow={setShowCategoryModal}\n        selectionValues={selectionValues}\n        setSelectionValues={setSelectionValues}\n        metaCategories={metaCategories}\n      />\n      <TagModal\n        show={showTagModal}\n        setShow={setShowTagModal}\n        selectionValues={selectionValues}\n        setSelectionValues={setSelectionValues}\n        allTags={allTags}\n      />\n    </div>\n  )\n  return (\n    <>\n      {content}\n      {extraContent}\n      <hr/>\n    </>\n  );\n};\n\nconst DropdownFromList = ({\n  label,\n  options,\n  selectionKey,\n  selectionValues,\n  setSelectionValues,\n  minLoadMonth,\n  setMinLoadMonth,\n}) => {\n  options = options\n    .map((opt) => {\n      return typeof opt === \"string\" ? (opt = { value: opt, label: opt }) : opt;\n    })\n    .map((opt) => {\n      return {\n        originalValue: opt.value,\n        value: sanitize(opt.value),\n        label: opt.label,\n      };\n    });\n  let defaultValue = options.filter(\n    (opt) => opt.originalValue === selectionValues[selectionKey]\n  );\n  const onChange = (e) => {\n    const value = e.originalValue;\n    changeSelectionValue({\n      key: selectionKey,\n      val: value,\n      setValueFunc: setSelectionValues,\n    });\n    if (selectionKey === \"plotTypeFull\") {\n      if (value === \"monthTrend\") {\n        changeSelectionValue({key: \"plotType\", val: \"trend\", setValueFunc: setSelectionValues});\n        changeSelectionValue({key: \"timeFrame\", val: \"month\", setValueFunc: setSelectionValues});\n      } else if (value === \"singleMonth\") {\n        changeSelectionValue({key: \"plotType\", val: \"singlePeriod\", setValueFunc: setSelectionValues});\n        changeSelectionValue({key: \"timeFrame\", val: \"month\", setValueFunc: setSelectionValues});\n      } else if (value === \"yearTrend\") {\n        changeSelectionValue({key: \"plotType\", val: \"trend\", setValueFunc: setSelectionValues});\n        changeSelectionValue({key: \"timeFrame\", val: \"year\", setValueFunc: setSelectionValues});\n      } else if (value === \"singleYear\") {\n        changeSelectionValue({key: \"plotType\", val: \"singlePeriod\", setValueFunc: setSelectionValues});\n        changeSelectionValue({key: \"timeFrame\", val: \"year\", setValueFunc: setSelectionValues});\n      }\n    }\n    if (selectionKey === \"timeFrame\") {\n      if (selectionValues.plotType === \"trend\") {\n        if (value === \"year\") {\n          const newMinTime = selectionValues.minTime.slice(0, 4);\n          changeSelectionValue({\n            key: \"minTime\",\n            val: newMinTime,\n            setValueFunc: setSelectionValues,\n          });\n          changeSelectionValue({\n            key: \"maxTime\",\n            val: selectionValues.maxTime.slice(0, 4),\n            setValueFunc: setSelectionValues,\n          });\n          if (newMinTime + \"-01\" < minLoadMonth) {\n            setMinLoadMonth(newMinTime + \"-01\");\n          }\n        } else {\n          changeSelectionValue({\n            key: \"minTime\",\n            val: selectionValues.minTime + \"-01\",\n            setValueFunc: setSelectionValues,\n          });\n          changeSelectionValue({\n            key: \"maxTime\",\n            val: selectionValues.maxTime + \"-12\",\n            setValueFunc: setSelectionValues,\n          });\n        }\n      } else {\n        if (value === \"year\") {\n          const newTime = selectionValues.maxTime.slice(0, 4);\n          changeSelectionValue({\n            key: \"maxTime\",\n            val: newTime,\n            setValueFunc: setSelectionValues,\n          });\n          if (newTime + \"-01\" < minLoadMonth) {\n            setMinLoadMonth(newTime + \"-01\");\n          }\n        } else {\n          changeSelectionValue({\n            key: \"maxTime\",\n            val: selectionValues.maxTime + \"-01\",\n            setValueFunc: setSelectionValues,\n          });\n        }\n      }\n    }\n  };\n  return (\n    <div style={{ width: \"100pt\", marginLeft: \"10pt\" }}>\n      {label}\n      <Select options={options} value={defaultValue} onChange={onChange} />\n    </div>\n  );\n};\n\nconst changeSelectionValue = ({ key, val, setValueFunc }) => {\n  setValueFunc((v) => {\n    let newValue = {};\n    newValue[key] = val;\n    return { ...v, ...newValue };\n  });\n};\n\nexport default Selections;\n","import dayjs from \"dayjs\";\n\nconst transformTransactions = ({\n  transactions,\n  metaCategories,\n  categoryChanges,\n}) => {\n  const categoriesToChange = Object.keys(categoryChanges || {});\n  let metaCatInverse = {};\n  for (const mc of Object.keys(metaCategories || {})) {\n    for (const c of metaCategories[mc]) {\n      metaCatInverse[c] = mc;\n    }\n  }\n  let amortizeTx = [];\n  for (let tx of transactions) {\n    if (categoriesToChange.includes(tx.category)) {\n      tx.category = categoryChanges[tx.category];\n    }\n    tx.metaCategory = metaCatInverse[tx.category] || \"Misc\";\n    tx.type = tx.amount < 0 ? \"expense\" : \"income\";\n    tx.tags = tx.tags || [];\n    if (typeof tx.tags === \"string\") {\n      tx.tags = tx.tags.split(\",\").map(x => x.toLowerCase().trim());\n    }\n    tx.tags = tx.tags.filter((t) => t.trim() !== \"\");\n    tx.month = dayjs(tx.date).format(\"YYYY-MM\");\n    tx.year = dayjs(tx.date).format(\"YYYY\");\n    if (!!tx.amortize) {\n      tx.amortize = parseInt(tx.amortize);\n      tx.skipIfAmortize = true\n      for (let i=0; i<tx.amortize; i++){\n        const newVals = {\n          date: dayjs(tx.date).add(i, 'month').format(\"YYYY-MM-DD\"),\n          amount: tx.amount / tx.amortize,\n          skipIfAmortize: false,\n          skipIfNoAmortize: true\n        }\n        newVals.month = dayjs(newVals.date).format(\"YYYY-MM\");\n        newVals.year = dayjs(newVals.date).format(\"YYYY\");\n        amortizeTx.push({...tx, ...newVals})\n      }\n    }\n  }\n  return transactions.concat(amortizeTx)\n    .filter((tx) => tx.metaCategory !== \"Ignore\")\n    .map((tx) => {\n      return { ...tx, ...{ amount: Math.abs(tx.amount) } };\n    });\n};\n\nexport default transformTransactions;\n","import { useContext, useState, useEffect } from \"react\";\nimport { AuthContext, signOutFunc } from \"./auth/Auth\";\nimport { Accordion } from \"react-bootstrap\";\nimport Table from \"./table/Table\";\nimport Plot from \"./plot/Plot\";\nimport Selections from \"./selections/Selections\";\nimport transformTransactions from \"./utils/transactions\";\nimport { sortedUniqueArray, allTimesBetween } from \"./utils/utils\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nconst Home = ({ history }) => {\n  const {\n    currentUser,\n    setCurrentUser,\n    txData,\n    settings,\n    minLoadMonth,\n    maxLoadMonth,\n    setMinLoadMonth,\n    loadingData,\n  } = useContext(AuthContext);\n  const [selectionValues, setSelectionValues] = useState({\n    metaCatVersion: undefined,\n    categoryChangeVersion: undefined,\n    txType: \"expense\",\n    inactiveCategories: [],\n    inactiveMetaCategories: [],\n    requiredTags: [],\n    forbiddenTags: [],\n    metaCategory: \"_all\",\n    plotType: \"trend\",\n    timeFrame: \"month\",\n    plotTypeFull: \"monthTrend\",\n    minTime: undefined,\n    maxTime: undefined,\n    amortize: false,\n  });\n  const [tableFilters, setTableFilters] = useState({});\n  const [waitForLoad, setWaitForLoad] = useState(loadingData);\n  useEffect(() => {\n    setWaitForLoad(loadingData);\n  }, [loadingData]);\n  useEffect(() => {\n    if (!!selectionValues.minTime) {\n      setMinLoadMonth((m) => {\n        const newTime =\n          selectionValues.minTime.length === 4\n            ? selectionValues.minTime + \"-01\"\n            : selectionValues.minTime;\n        return newTime < m ? newTime : m;\n      });\n    }\n  }, [selectionValues.minTime, setMinLoadMonth]);\n  useEffect(() => {\n    if (!!settings && !!minLoadMonth && !!maxLoadMonth) {\n      setSelectionValues((v) => {\n        let newObj = {};\n        if (!!!v.metaCatVersion) {\n          newObj.metaCatVersion = (settings.metaCategories || {})._default;\n        }\n        if (!!!v.categoryChanges) {\n          newObj.categoryChangeVersion = (\n            settings.categoryChanges || {}\n          )._default;\n        }\n        if (!!!v.minTime) {\n          newObj.minTime = minLoadMonth;\n        }\n        if (!!!v.maxTime) {\n          newObj.maxTime = maxLoadMonth;\n        }\n        return { ...v, ...newObj };\n      });\n    }\n  }, [settings, minLoadMonth, maxLoadMonth]);\n  let allTx = [];\n  for (const k of Object.keys(txData || {})) {\n    allTx = allTx.concat(\n      transformTransactions({\n        transactions: txData[k],\n        metaCategories: settings.metaCategories[selectionValues.metaCatVersion],\n        categoryChanges:\n          settings.categoryChanges[selectionValues.categoryChangeVersion],\n      })\n    );\n  }\n  if (!!!currentUser) {\n    history.push(\"/fin-trans/login\");\n  }\n  if (\n    !!!settings ||\n    !!!selectionValues.metaCatVersion ||\n    !!!selectionValues.categoryChangeVersion\n  ) {\n    return <div>Loading...</div>;\n  }\n  let allTags = [];\n  for (const tx of allTx) {\n    allTags = allTags.concat(tx.tags || []);\n  }\n  allTags = sortedUniqueArray({ array: allTags });\n  allTx = allTx.filter((tx) => {\n    return (\n      tx[selectionValues.timeFrame] >= selectionValues.minTime &&\n      tx[selectionValues.timeFrame] <= selectionValues.maxTime &&\n      tx.type === selectionValues.txType &&\n      !selectionValues.inactiveCategories.includes(tx.category) &&\n      !selectionValues.inactiveMetaCategories.includes(tx.metaCategory) &&\n      (tx.tags || [])\n        .map((tag) => {\n          return selectionValues.requiredTags.includes(tag) ? 1 : 0;\n        })\n        .reduce((a, b) => a + b, 0) === selectionValues.requiredTags.length &&\n      (tx.tags || [])\n        .map((tag) => {\n          return selectionValues.forbiddenTags.includes(tag) ? 1 : 0;\n        })\n        .reduce((a, b) => a + b, 0) === 0 &&\n      (selectionValues.amortize ? !tx.skipIfAmortize : !tx.skipIfNoAmortize)\n    );\n  });\n  allTx = allTx.filter((tx) => {\n    return selectionValues.plotType === \"trend\"\n      ? tx[selectionValues.timeFrame] >= selectionValues.minTime &&\n          tx[selectionValues.timeFrame] <= selectionValues.maxTime\n      : tx[selectionValues.timeFrame] === selectionValues.maxTime;\n  });\n  const allMetaCats = sortedUniqueArray({\n    array: allTx.map((tx) => tx.metaCategory),\n  });\n  allTx = allTx.filter((tx) => {\n    return selectionValues.metaCategory === \"_all\"\n      ? true\n      : tx.metaCategory === selectionValues.metaCategory;\n  });\n  const allTimes = allTimesBetween({\n    minTime: settings.general.minMonth,\n    maxTime: settings.general.maxMonth,\n    timeFrame: selectionValues.timeFrame,\n    reverse: true,\n  });\n  return (\n    <>\n      <button\n        onClick={() => {\n          signOutFunc();\n          setCurrentUser();\n          history.push(\"/fin-trans/login\");\n        }}\n      >\n        Sign Out\n      </button>\n      <Selections\n        selectionValues={selectionValues}\n        setSelectionValues={setSelectionValues}\n        allMetaCats={allMetaCats}\n        allTimes={allTimes}\n        metaCategories={settings.metaCategories[selectionValues.metaCatVersion]}\n        allTags={allTags}\n      />\n      {waitForLoad ? (\n        <h3 style={{ textAlign: \"center\" }}>Waiting for data to load...</h3>\n      ) : (\n        <>\n          <Accordion defaultActiveKey=\"0\">\n            <Accordion.Toggle eventKey=\"0\">Toggle Plot</Accordion.Toggle>\n            <Accordion.Collapse eventKey=\"0\">\n              <Plot\n                plotTx={allTx}\n                selectionValues={selectionValues}\n                setTableFilters={setTableFilters}\n              />\n            </Accordion.Collapse>\n          </Accordion>\n          <hr />\n          <Accordion defaultActiveKey=\"0\">\n            <Accordion.Toggle eventKey=\"0\">Toggle Table</Accordion.Toggle>\n            <Accordion.Collapse eventKey=\"0\">\n              <Table transactions={allTx} filterValues={tableFilters} />\n            </Accordion.Collapse>\n          </Accordion>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default Home;\n","import CSVReader from \"react-csv-reader\";\nimport { db } from \"../firebase\";\nimport { sortedUniqueArray } from \"../utils/utils\";\n\nconst monthsRef = db.collection(\"months\");\n\nconst LoadData = () => {\n  const papaparseOptions = {\n    header: true,\n    dynamicTyping: true,\n    skipEmptyLines: true,\n    transformHeader: (header) => header.toLowerCase().replace(/\\W/g, \"_\"),\n  };\n  return (\n    <CSVReader\n      cssClass=\"csv-reader-input\"\n      label=\"Select CSV to upload\"\n      parserOptions={papaparseOptions}\n      onFileLoaded={uploadData}\n      onError={(e) => console.log(e)}\n    />\n  );\n};\n\nconst uploadData = async (data) => {\n  for (let d of data) {\n    d.date = new Date(Date.parse(d.date)).toISOString().substring(0, 10);\n  }\n  const allMonths = sortedUniqueArray({\n    array: data.map((d) => d.date.slice(0, 7)),\n  });\n  let oldMonthTx = {};\n  let newMonthTx = {};\n  for (const m of allMonths) {\n    newMonthTx[m] = [];\n    oldMonthTx[m] = await getMonthObject(m);\n  }\n  data.map((d) => {\n    return newMonthTx[d.date.slice(0, 7)].push(d);\n  });\n  for (const m of allMonths) {\n    let allTx = oldMonthTx[m].concat(newMonthTx[m]);\n    monthsRef\n      .doc(m)\n      .set({ transactions: allTx }, { merge: true })\n      .then(() => {\n        window.alert(\"Transactions uploaded successfully for month \" + m);\n      })\n      .catch((e) => {\n        window.alert(\"There was an issue uploading the transactions: \", e);\n      });\n  }\n};\n\nconst getMonthObject = async (m) => {\n  let monthObject = await queryForMonthObject(m);\n  return monthObject.transactions || [];\n};\n\nconst queryForMonthObject = (m) => {\n  let monthData = monthsRef\n    .doc(m)\n    .get()\n    .then(function (doc) {\n      if (doc.exists) {\n        return doc.data();\n      } else {\n        newMonthFunc(m);\n        return { transactions: [] };\n      }\n    })\n    .catch(function (error) {\n      console.log(\"Error getting documents: \", error);\n      return null;\n    });\n  return monthData;\n};\n\nfunction newMonthFunc(m) {\n  const generalSettingsRef = db.doc(\"settings/general\");\n  generalSettingsRef\n    .get()\n    .then(function (doc) {\n      const data = doc.data();\n      if (m < data.minMonth) {\n        generalSettingsRef.set({ minMonth: m }, { merge: true });\n      } else if (m > data.maxMonth) {\n        generalSettingsRef.set({ maxMonth: m }, { merge: true });\n      }\n    })\n    .catch(function (error) {\n      console.log(\"Error getting settings: \", error);\n      return null;\n    });\n}\n\nexport default LoadData;\n\nexport { monthsRef, newMonthFunc };\n","import { Navbar, Nav } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\n\nconst NavMenu = () => {\n  return (\n    <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\n      <Navbar.Brand as={Link} to=\"/fin-trans\">\n        Transactions\n      </Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n      <Navbar.Collapse id=\"basic-navbar-nav\">\n        <Nav className=\"mr-auto\">\n          <Nav.Link as={Link} to=\"/fin-trans/upload\">\n            Upload\n          </Nav.Link>\n          <Nav.Link as={Link} to=\"/fin-trans/edit\">\n            Edit\n          </Nav.Link>\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n};\n\nexport default NavMenu;\n","import MaterialTable from \"material-table\";\nimport React, { useContext, useState } from \"react\";\nimport { Prompt } from \"react-router\";\nimport { AuthContext } from \"../auth/Auth\";\nimport { monthsRef, newMonthFunc } from \"../loadData/LoadData\";\nimport tableIcons from \"../table/tableIcons\";\nimport { sortedUniqueArray } from \"../utils/utils\";\n\nconst EditTransactions = () => {\n  const { currentUser, txData } = useContext(AuthContext);\n  const [modifiedMonths, setModifiedMonths] = useState([]);\n  const getTableDataFromTxData = () => {\n    const tData = [];\n    for (const dArray of Object.values(txData || {})) {\n      for (const d of dArray) {\n        if (!!d.tags) {\n          d.tags = typeof d.tags === \"string\" ? d.tags : d.tags.join(\",\");\n        }\n        tData.push(d);\n      }\n    }\n    return tData;\n  };\n  const [tableData, setTableData] = useState(getTableDataFromTxData());\n  if (!currentUser) {\n    return <div>Loading...</div>;\n  }\n  const saveChanges = () => {\n    for (const m of sortedUniqueArray({ array: modifiedMonths })) {\n      const monthData = tableData.filter((d) => d.date.slice(0, 7) === m);\n      monthsRef\n        .doc(m)\n        .set({ transactions: monthData }, { merge: true })\n        .then(() => {\n          window.alert(\"Transactions uploaded successfully for month \" + m);\n        })\n        .catch((e) => {\n          window.alert(\"There was an issue uploading the transactions: \", e);\n        });\n      if (!Object.keys(txData).includes(m)) {\n        newMonthFunc(m);\n      }\n    }\n    setModifiedMonths([]);\n  };\n  const columns = [\n    { title: \"Date\", field: \"date\", defaultSort: \"desc\" },\n    { title: \"Description\", field: \"description\" },\n    { title: \"Amount\", field: \"amount\" },\n    { title: \"Category\", field: \"category\" },\n    { title: \"Comments\", field: \"comments\" },\n    { title: \"Tags\", field: \"tags\" },\n    { title: \"Account\", field: \"account\" },\n    { title: \"Amortization (Months)\", field: \"amortize\" },\n  ];\n  return (\n    <div>\n      <button\n        onClick={() => {\n          setTableData(getTableDataFromTxData());\n          setModifiedMonths([]);\n        }}\n      >\n        Undo All\n      </button>\n      <button onClick={saveChanges}>Save All</button>\n      <Prompt\n        when={modifiedMonths.length > 0}\n        message={\n          \"You have unsaved changes. Please either save or undo changes.\"\n        }\n      />\n      <MaterialTable\n        title={\"Raw Transaction Data\"}\n        data={tableData}\n        columns={columns}\n        icons={tableIcons}\n        options={{ filtering: true }}\n        editable={{\n          onRowAdd: (newData) =>\n            new Promise((resolve, reject) => {\n              setTimeout(() => {\n                setTableData([...tableData, newData]);\n                setModifiedMonths([\n                  ...modifiedMonths,\n                  newData.date.slice(0, 7),\n                ]);\n                resolve();\n              }, 1000);\n            }),\n          onRowUpdate: (newData, oldData) =>\n            new Promise((resolve, reject) => {\n              setTimeout(() => {\n                const dataUpdate = [...tableData];\n                const index = oldData.tableData.id;\n                dataUpdate[index] = newData;\n                setTableData([...dataUpdate]);\n                setModifiedMonths([\n                  ...modifiedMonths,\n                  newData.date.slice(0, 7),\n                  oldData.date.slice(0, 7),\n                ]);\n                resolve();\n              }, 1000);\n            }),\n          onRowDelete: (oldData) =>\n            new Promise((resolve, reject) => {\n              setTimeout(() => {\n                const dataDelete = [...tableData];\n                const index = oldData.tableData.id;\n                dataDelete.splice(index, 1);\n                setTableData([...dataDelete]);\n                setModifiedMonths([\n                  ...modifiedMonths,\n                  oldData.date.slice(0, 7),\n                ]);\n                resolve();\n              }, 1000);\n            }),\n        }}\n      />\n    </div>\n  );\n};\n\nexport default EditTransactions;\n","import Login from \"./auth/Login\";\nimport Home from \"./Home\";\nimport LoadData from \"./loadData/LoadData\";\nimport NavMenu from \"./nav/Nav\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { AuthProvider } from \"./auth/Auth\";\nimport EditTransactions from \"./edit/EditTransactions\";\n\nconst App = () => {\n  return (\n    <AuthProvider>\n      <Router>\n        <NavMenu />\n        <Switch>\n          <div style={{ margin: \"5pt\" }}>\n            <Route exact path=\"/fin-trans\" component={Home} />\n            <Route exact path=\"/fin-trans/login\" component={Login} />\n            <Route exact path=\"/fin-trans/upload\" component={LoadData} />\n            <Route exact path=\"/fin-trans/edit\" component={EditTransactions} />\n          </div>\n        </Switch>\n      </Router>\n    </AuthProvider>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}