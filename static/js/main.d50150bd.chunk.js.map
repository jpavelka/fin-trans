{"version":3,"sources":["firebase.js","utils/utils.js","auth/Auth.js","auth/Login.js","table/tableIcons.js","table/Table.js","plot/utils.js","plot/SinglePeriodPlot.js","plot/TrendPlot.js","plot/Plot.js","selections/utils.js","selections/CategoryModal.js","selections/TagModal.js","selections/Selections.js","utils/transactions.js","Home.js","loadData/LoadData.js","nav/Nav.js","edit/EditTransactions.js","App.js","index.js"],"names":["app","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","db","firestore","sortedUniqueArray","array","reverse","arr","Array","from","Set","sort","AuthContext","React","createContext","monthFormat","AuthProvider","children","useState","minLoadMonth","setMinLoadMonth","maxLoadMonth","setMaxLoadMonth","allListenMonths","setAllListenMonths","txData","setTxData","settings","setSettings","currentUser","setCurrentUser","loadingData","setLoadingData","useEffect","auth","onAuthStateChanged","user","Object","keys","length","collection","where","FieldPath","documentId","onSnapshot","query","newSettings","docs","doc","k","id","data","general","minMonth","dayjs","maxMonth","add","format","month","listenMonths","m","includes","push","filter","newAllListenMonths","concat","newData","transactions","tx","comments","comment","d","Provider","value","Login","history","useContext","googleProvider","GoogleAuthProvider","className","onClick","signInWithPopup","then","res","catch","error","console","log","message","tableIcons","Add","forwardRef","props","ref","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","Table","filterValues","columns","title","field","defaultSort","type","col","defaultFilter","icons","options","filtering","getGroupedData","allTx","groupOn","includeAll","isArray","slice","thisGroupOn","nextGroupOn","thisIncludeAll","nextIncludeAll","allGroups","map","x","groupedData","group","incrementTime","timeFrame","time","currencyFormat","Intl","NumberFormat","style","currency","dateFormat","dateFormatInv","plotColors","getPlotData","plotData","hoverinfo","y","text","cat","amount","reduce","a","b","getPlotLayout","txType","metaCategory","autosize","hovermode","SinglePeriodPlot","plotTx","setTableFilters","plotLayout","layout","useResizeHandler","width","height","e","filters","points","minTime","maxTime","subTitle","includeAverages","entries","catData","catName","yVal","totalY","_cat","_groupOn","name","legendgroup","avgY","avgData","_isAvg","line","dash","showlegend","replace","repeat","traces","i","trace","shading","c","color","fade","rgb","string","addColors","IncludeAvgCheckbox","setIncludeAverages","margin","checked","onChange","target","TrendPlot","date","Plot","selectionValues","plotType","sanitize","s","MetaCatCheckBoxes","show","metaCat","metaCategories","checkChanged","setCheckChanged","disabledMetaCategories","setDisabledMetaCategories","marginTop","display","getMetaCatId","defaultChecked","inactiveMetaCategories","changeCheckChanged","catOrMetaCat","key","for","marginLeft","getCatId","inactiveCategories","disabled","metaCats","other","v","thisObj","otherObj","obj","getOptions","originalValue","label","mc","CategoryModal","setShow","setSelectionValues","selectedOption","setSelectedOption","cats","selS","handleClose","Modal","Header","Body","defaultValue","opt","Footer","imc","ic","TagModal","allTags","originalStatuses","tag","requiredTags","forbiddenTags","statuses","setStatuses","statusesToSet","newObj","t","textAlign","padding","DropdownFromList","selectionKey","changeSelectionValue","val","setValueFunc","newMinTime","newTime","newValue","Selections","allMetaCats","allTimes","showCategoryModal","setShowCategoryModal","showTagModal","setShowTagModal","dropdownArgs","categoryChanges","lastInd","getDropdownArgs","content","selGroup","selGroupContent","sel","marginRight","amortize","transformTransactions","categoriesToChange","metaCatInverse","amortizeTx","category","tags","split","toLowerCase","trim","year","parseInt","skipIfAmortize","newVals","skipIfNoAmortize","Math","abs","Home","metaCatVersion","undefined","categoryChangeVersion","tableFilters","waitForLoad","setWaitForLoad","_default","allTimesBetween","window","confirm","signOut","Accordion","defaultActiveKey","Toggle","eventKey","Collapse","monthsRef","uploadData","Date","parse","toISOString","substring","allMonths","oldMonthTx","newMonthTx","getMonthObject","set","merge","alert","queryForMonthObject","monthObject","get","exists","newMonthFunc","generalSettingsRef","LoadData","cssClass","parserOptions","header","dynamicTyping","skipEmptyLines","transformHeader","onFileLoaded","onError","NavMenu","Navbar","bg","variant","expand","Brand","as","Link","to","Nav","EditTransactions","modifiedMonths","setModifiedMonths","getTableDataFromTxData","tData","values","dArray","join","tableData","setTableData","monthData","when","editable","onRowAdd","Promise","resolve","reject","setTimeout","onRowUpdate","oldData","dataUpdate","onRowDelete","dataDelete","index","splice","App","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0LAIMA,G,cAAMC,IAASC,cAAc,CACjCC,OAAQC,0CACRC,WAAYD,kCACZE,YAAaF,yCACbG,UAAWH,kBACXI,cAAeJ,8BACfK,kBAAmBL,kBAEfM,EAAKT,IAASU,Y,iBCVPC,EAAoB,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,MAA6B,IAAtBC,eAAsB,SAC3DC,EAAMC,MAAMC,KAAK,IAAIC,IAAIL,IAAQM,OACrC,OAAIL,EACKC,EAAID,UAENC,CACR,E,OCFYK,EAAcC,IAAMC,gBAC3BC,EAAc,UAEPC,EAAe,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC7B,EAAwCC,qBAAxC,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAAwCF,qBAAxC,mBAAOG,EAAP,KAAqBC,EAArB,KACA,EAA8CJ,mBAAS,IAAvD,mBAAOK,EAAP,KAAwBC,EAAxB,KACA,EAA4BN,qBAA5B,mBAAOO,EAAP,KAAeC,EAAf,KACA,EAAgCR,mBAAS,CAAC,GAA1C,mBAAOS,EAAP,KAAiBC,EAAjB,KACA,EAAsCV,qBAAtC,mBAAOW,EAAP,KAAoBC,EAApB,KACA,EAAsCZ,oBAAS,GAA/C,mBAAOa,EAAP,KAAoBC,EAApB,KAyFA,OAxFAC,qBAAU,WACRzC,EAAI0C,OAAOC,oBAAmB,SAACC,GAC7B,GAAMA,IACJN,EAAeM,GACsB,IAAjCC,OAAOC,KAAKX,GAAUY,QACxBrC,EAAGsC,WAAW,YACXC,MAAMhD,IAASU,UAAUuC,UAAUC,aAAc,KAAM,CACtD,kBACA,iBACA,YAEDC,YAAW,SAACC,GACX,IADqB,EACjBC,EAAc,CAAC,EADE,cAELD,EAAME,MAFD,IAErB,2BAA4B,CAAC,IAApBC,EAAmB,QACpBC,EAAID,EAAIE,GACRC,EAAOH,EAAIG,QAAU,CAAC,EAC5BL,EAAYG,GAAKE,CAClB,CANoB,+BAOrBvB,EAAYkB,EACb,IAECnB,EAASyB,SAAS,CAClBjC,IAAiBQ,EAASyB,QAAQC,WACpCjC,EACEkC,IAAM3B,EAASyB,QAAQG,UACpBC,KAAK,GAAI,SACTC,OAAO1C,IAEZO,EACEgC,IAAM3B,EAASyB,QAAQG,UAAUE,OAAO1C,KAK5C,IAFA,IAAI2C,EAAQJ,IAAMnC,EAAe,OAAOsC,OAAO1C,GAC3C4C,EAAe,GACZD,GAASrC,GAAc,CAC5B,IAAMuC,EAAIF,EACLrB,OAAOC,KAAKb,GAAU,CAAC,GAAGoC,SAASD,IACtCD,EAAaG,KAAKF,GAEpBF,EAAQJ,IAAMI,EAAQ,OACnBF,IAAI,EAAG,SACPC,OAAO1C,EACX,CACD,GACE4C,EAAaI,QAAO,SAACH,GAAD,OAAQrC,EAAgBsC,SAASD,EAAjC,IAAqCrB,OAAS,EAClE,CACA,IAAMyB,EAAqB5D,EAAkB,CAC3CC,MAAOkB,EAAgB0C,OAAON,KAEhCzD,EAAGsC,WAAW,UACXC,MACChD,IAASU,UAAUuC,UAAUC,aAC7B,KACAqB,EAAmB,IAEpBvB,MACChD,IAASU,UAAUuC,UAAUC,aAC7B,KACAqB,EAAmBA,EAAmBzB,OAAS,IAEhDK,YAAW,SAACC,GACXb,GAAe,GACf,IAFqB,EAEjBkC,EAAU,CAAC,EAFM,cAGLrB,EAAME,MAHD,IAGrB,2BAA4B,CAAC,IAAD,EAAnBC,EAAmB,QACpBY,EAAIZ,EAAIE,GAEViB,GADSnB,EAAIG,QAAU,CAAC,GACJgB,cAAgB,GAHd,cAIXA,GAJW,IAI1B,2BAA6B,CAAC,IAArBC,EAAoB,QAEzB/B,OAAOC,KAAK8B,GAAIP,SAAS,aACxBxB,OAAOC,KAAK8B,GAAIP,SAAS,cAE1BO,EAAGC,SAAWD,EAAGE,QAEpB,CAXyB,+BAY1BJ,EAAQN,GAAKO,CACd,CAhBoB,+BAiBrBzC,GAAU,SAAC6C,GACT,OAAO,2BAAKA,GAAML,EACnB,IACDlC,GAAe,EAChB,IACHR,EAAmBwC,EACpB,CACF,CAEJ,GACF,GAAE,CAAC7C,EAAcE,EAAcI,EAAQE,EAAUJ,IAEhD,cAACX,EAAY4D,SAAb,CACEC,MAAO,CACL5C,cACAJ,SACAL,kBACAU,iBACAH,WACAR,eACAE,eACAU,eATJ,SAYGd,GAGN,EC7FcyD,EAxBD,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACSC,qBAAWhE,GAA3BiB,aAEN8C,EAAQb,KAAK,cAEf,IAAM5B,EAAOzC,IAASyC,OAChB2C,EAAiB,IAAIpF,IAASyC,KAAK4C,mBAWzC,OACE,wBAAQC,UAAU,wBAAwBC,QAXnB,WACvB9C,EACG+C,gBAAgBJ,GAChBK,MAAK,SAACC,GACLR,EAAQb,KAAK,aACd,IACAsB,OAAM,SAACC,GACNC,QAAQC,IAAIF,EAAMG,QACnB,GACJ,EAEC,SACE,wDAGL,E,ySCgBcC,GAxBI,CACjBC,IAAKC,sBAAW,SAACC,EAAOC,GAAR,OAAgB,cAAC,IAAD,2BAAYD,GAAZ,IAAmBC,IAAKA,IAAxC,IAChBC,MAAOH,sBAAW,SAACC,EAAOC,GAAR,OAAgB,cAAC,IAAD,2BAAWD,GAAX,IAAkBC,IAAKA,IAAvC,IAClBE,MAAOJ,sBAAW,SAACC,EAAOC,GAAR,OAAgB,cAAC,IAAD,2BAAWD,GAAX,IAAkBC,IAAKA,IAAvC,IAClBG,OAAQL,sBAAW,SAACC,EAAOC,GAAR,OAAgB,cAAC,IAAD,2BAAmBD,GAAnB,IAA0BC,IAAKA,IAA/C,IACnBI,YAAaN,sBAAW,SAACC,EAAOC,GAAR,OACtB,cAAC,IAAD,2BAAkBD,GAAlB,IAAyBC,IAAKA,IADR,IAGxBK,KAAMP,sBAAW,SAACC,EAAOC,GAAR,OAAgB,cAAC,IAAD,2BAAUD,GAAV,IAAiBC,IAAKA,IAAtC,IACjBM,OAAQR,sBAAW,SAACC,EAAOC,GAAR,OAAgB,cAAC,IAAD,2BAAaD,GAAb,IAAoBC,IAAKA,IAAzC,IACnBO,OAAQT,sBAAW,SAACC,EAAOC,GAAR,OAAgB,cAAC,IAAD,2BAAgBD,GAAhB,IAAuBC,IAAKA,IAA5C,IACnBQ,UAAWV,sBAAW,SAACC,EAAOC,GAAR,OAAgB,cAAC,IAAD,2BAAeD,GAAf,IAAsBC,IAAKA,IAA3C,IACtBS,SAAUX,sBAAW,SAACC,EAAOC,GAAR,OAAgB,cAAC,IAAD,2BAAcD,GAAd,IAAqBC,IAAKA,IAA1C,IACrBU,SAAUZ,sBAAW,SAACC,EAAOC,GAAR,OAAgB,cAAC,IAAD,2BAAkBD,GAAlB,IAAyBC,IAAKA,IAA9C,IACrBW,aAAcb,sBAAW,SAACC,EAAOC,GAAR,OACvB,cAAC,IAAD,2BAAiBD,GAAjB,IAAwBC,IAAKA,IADN,IAGzBY,YAAad,sBAAW,SAACC,EAAOC,GAAR,OAAgB,cAAC,IAAD,2BAAWD,GAAX,IAAkBC,IAAKA,IAAvC,IACxBa,OAAQf,sBAAW,SAACC,EAAOC,GAAR,OAAgB,cAAC,IAAD,2BAAYD,GAAZ,IAAmBC,IAAKA,IAAxC,IACnBc,UAAWhB,sBAAW,SAACC,EAAOC,GAAR,OAAgB,cAAC,IAAD,2BAAmBD,GAAnB,IAA0BC,IAAKA,IAA/C,IACtBe,gBAAiBjB,sBAAW,SAACC,EAAOC,GAAR,OAAgB,cAAC,IAAD,2BAAYD,GAAZ,IAAmBC,IAAKA,IAAxC,IAC5BgB,WAAYlB,sBAAW,SAACC,EAAOC,GAAR,OAAgB,cAAC,IAAD,2BAAgBD,GAAhB,IAAuBC,IAAKA,IAA5C,KCNViB,GA7BD,SAAC,GAWb,IAXsD,IAAvC3C,EAAsC,EAAtCA,aAAsC,IAAxB4C,oBAAwB,MAAT,CAAC,EAAQ,EAC/CC,EAAU,CACd,CAAEC,MAAO,OAAQC,MAAO,OAAQC,YAAa,QAC7C,CAAEF,MAAO,SAAUC,MAAO,SAAUE,KAAM,YAC1C,CAAEH,MAAO,WAAYC,MAAO,YAC5B,CAAED,MAAO,gBAAiBC,MAAO,gBACjC,CAAED,MAAO,UAAWC,MAAO,WAC3B,CAAED,MAAO,OAAQC,MAAO,QACxB,CAAED,MAAO,cAAeC,MAAO,eAC/B,CAAED,MAAO,WAAYC,MAAO,aAE9B,MAAgBF,EAAhB,eAAyB,CAApB,IAAIK,EAAG,KACNhF,OAAOC,KAAKyE,GAAclD,SAASwD,EAAIH,SACzCG,EAAIC,cAAgBP,EAAaM,EAAIH,OAExC,CACD,OACE,8BACE,cAAC,IAAD,CACED,MAAO,eACP9D,KAAMgB,EACN6C,QAASA,EACTO,MAAO9B,GACP+B,QAAS,CAAEC,WAAW,MAI7B,E,0CC3BYC,GAAiB,SAAjBA,EAAkB,GAAoC,IAAD,EAAjCC,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,WAC/C,EAAmCrH,MAAMsH,QAAQF,GAC7C,CAACA,EAAQ,GAAIA,EAAQG,MAAM,IAC3B,CAACH,EAAS,IAFd,mBAAOI,EAAP,KAAoBC,EAApB,KAGA,EAAyCzH,MAAMsH,QAAQD,GACnD,CAACA,EAAW,GAAIA,EAAWE,MAAM,IACjC,CAACF,EAAY,IAFjB,mBAAOK,EAAP,KAAuBC,EAAvB,KAGMC,EAAYhI,EAAkB,CAClCC,MAAOsH,EAAMU,KAAI,SAACC,GAAD,OAAOA,EAAEN,EAAT,MAEfO,EAAc,CAAC,EAV6C,cAW5CH,GAX4C,IAWhE,2BAA+B,CAC7BG,EAD6B,SACR,EACtB,CAb+D,mDAc/CZ,GAd+C,IAchE,2BAAwB,CAAC,IAAdvD,EAAa,QACtBmE,EAAYnE,EAAG4D,IAAclE,KAAKM,EACnC,CAhB+D,+BAoBhE,GAHI8D,IACFK,EAAW,KAAWZ,GAEpBM,EAAY1F,OAAS,EACvB,cAAoBF,OAAOC,KAAKiG,GAAhC,eAA8C,CAAzC,IAAMC,EAAK,KACdD,EAAYC,GAASd,EAAe,CAClCC,MAAOY,EAAYC,GACnBZ,QAASK,EACTJ,WAAYM,GAEf,CAEH,OAAOI,CACR,EAEYE,GAAgB,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,UAAWC,EAAW,EAAXA,KACzC,MAAqB,UAAdD,EACHpF,IAAMqF,EAAO,OACVnF,IAAI,EAAG,SACPC,OAAO,WACVH,IAAMqF,EAAO,UACVnF,IAAI,EAAG,QACPC,OAAO,OACf,EAEYmF,GAAiB,SAACN,GAK7B,OAJgB,IAAIO,KAAKC,aAAa,QAAS,CAC7CC,MAAO,WACPC,SAAU,QAEKvF,OAAO6E,EACzB,EAEYW,GAAa,SAAC,GAAsB,IAApB1E,EAAmB,EAAnBA,EAC3B,MAAqB,UADyB,EAAhBmE,UACCpF,IAAMiB,EAAI,OAAOd,OAAO,YAAcc,CACtE,EAEY2E,GAAgB,SAAC,GAAsB,IAApB3E,EAAmB,EAAnBA,EAC9B,MAAqB,UAD4B,EAAhBmE,UACFpF,IAAM,KAAOiB,GAAGd,OAAO,WAAac,CACpE,EAEY4E,GAAa,CACxB,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WChCIC,GAAc,SAAC,GAAqB,IAAD,EAAlBb,EAAkB,EAAlBA,YACjBc,EAAW,CACbjC,KAAM,MACNkC,UAAW,OACXhB,EAAG,GACHiB,EAAG,GACHC,KAAM,IAN+B,cAQrBpJ,EAAkB,CAAEC,MAAOgC,OAAOC,KAAKiG,MARlB,IAQvC,2BAA0E,CAAC,IAAhEkB,EAA+D,QAElEF,EADOhB,EAAYkB,GACVpB,KAAI,SAAC9D,GAAD,OAAOA,EAAEmF,MAAT,IAAiBC,QAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,CAAd,GAAiB,GAC5DR,EAASf,EAAExE,KAAK2F,GAChBJ,EAASE,EAAEzF,KAAKyF,GAChBF,EAASG,KAAK1F,KAAd,UAAsB2F,EAAtB,eAAgCb,GAAeW,IAChD,CAdsC,+BAevC,MAAO,CAACF,EACT,EAEKS,GAAgB,SAAC,GAA+C,IAA7CpB,EAA4C,EAA5CA,UAAWC,EAAiC,EAAjCA,KAAMoB,EAA2B,EAA3BA,OAAQC,EAAmB,EAAnBA,aAIhD,MAAO,CACL/C,MAJS,UAAuB,SAAjB+C,EAA0B,MAAQA,EAAxC,YACE,YAAXD,EAAuB,WAAa,SAD3B,cAELd,GAAW,CAAE1E,EAAGoE,EAAMD,UAAWA,KAGrCuB,UAAU,EACVC,UAAW,UAEd,EAEcC,GAjEiB,SAAC,GAO1B,IANLC,EAMI,EANJA,OACAJ,EAKI,EALJA,aACAtB,EAII,EAJJA,UACAC,EAGI,EAHJA,KACAoB,EAEI,EAFJA,OACAM,EACI,EADJA,gBAEMzC,EAA2B,SAAjBoC,EAA0B,eAAiB,WACrDzB,EAAcb,GAAe,CACjCC,MAAOyC,EACPxC,QAAS,CAACA,GACVC,WAAY,EAAC,KAETwB,EAAWD,GAAY,CAAEb,YAAaA,IACtC+B,EAAaR,GAAc,CAC/BpB,UAAWA,EACXC,KAAMA,EACNoB,OAAQA,EACRC,aAAcA,IAEhB,OACE,cAAC,KAAD,CACEO,OAAQD,EACRnH,KAAMkG,EACNmB,kBAAkB,EAClBzB,MAAO,CAAE0B,MAAO,OAAQC,OAAQ,QAChC1F,QAAS,SAAC2F,GACR,IAAIC,EAAU,CAAC,EACfA,EAAQhD,GAAW+C,EAAEE,OAAO,GAAGvC,EAC/B+B,EAAgBO,EACjB,GAGN,EC8BKd,GAAgB,SAAC,GAMhB,IALLpB,EAKI,EALJA,UACAoC,EAII,EAJJA,QACAC,EAGI,EAHJA,QACAhB,EAEI,EAFJA,OACAC,EACI,EADJA,aAEM/C,EAAK,UAAoB,UAAdyB,EAAwB,QAAU,OAAxC,uBACE,YAAXqB,EAAuB,WAAa,UAD3B,OAES,SAAjBC,EAA0B,GAAK,MAAQA,GACpCgB,EAAQ,UAAM/B,GAAW,CAC7B1E,EAAGuG,EACHpC,UAAWA,IAFC,cAGNO,GAAW,CAAE1E,EAAGwG,EAASrC,UAAWA,KAC5C,MAAO,CACLzB,MAAM,GAAD,OAAKA,EAAL,oBAAsB+D,EAAtB,UACLf,UAAU,EACVC,UAAW,UAEd,EAEKd,GAAc,SAAC,GASnB,IAFK,IANLb,EAMI,EANJA,YACAX,EAKI,EALJA,QACAc,EAII,EAJJA,UACAoC,EAGI,EAHJA,QACAC,EAEI,EAFJA,QACAE,EACI,EADJA,gBAEI5B,EAAW,GACf,MAA6BhH,OAAO6I,QAAQ3C,GAA5C,eAA0D,CAMxD,IANG,0BAAOkB,EAAP,KAAY0B,EAAZ,KACCxC,EAAOmC,EACPxC,EAAI,GACJiB,EAAI,GACJC,EAAO,GACL4B,EAAkB,SAAR3B,EAAiB,QAAUA,EACpCd,GAAQoC,GAAS,CACtBzC,EAAExE,KAAKmF,GAAW,CAAE1E,EAAGoE,EAAMD,UAAWA,KACxC,IAFsB,EAElB2C,EAAO,EAFW,cAGLF,EAAQxC,IAAS,IAHZ,IAGtB,2BAAsC,CACpC0C,GADoC,QACzB3B,MACZ,CALqB,+BAMtBH,EAAEzF,KAAKuH,GACP7B,EAAK1F,KAAL,UACKsH,EADL,eACmBnC,GAAW,CAC1B1E,EAAGoE,EACHD,UAAWA,IAHf,eAIWE,GAAeyC,KAE1B1C,EAAOF,GAAc,CAAEC,UAAWA,EAAWC,KAAMA,GACpD,CACD,IAAM2C,EAAS/B,EAAEI,QAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,CAAd,GAAiB,GACnC3F,EAAU,CACdqH,KAAM9B,EACN+B,SAAU5D,EACV6D,KAAK,GAAD,OAAKL,EAAL,cAAkBxC,GAAe0C,IACrCI,YAAajC,EACbrC,KAAM,UACNkC,UAAW,OACXE,KAAMA,EACNlB,EAAGA,EACHiB,EAAGA,GAELF,EAASvF,KAAKI,GACV+G,GAAkB,WACpB,IAAMU,EAAOL,EAASpH,EAAQqF,EAAEhH,OAC1BqJ,EAAO,2BACR1H,GACA,CACDqH,KAAMrH,EAAQqH,KAAO,OACrBM,QAAQ,EACRC,KAAM,CAACC,KAAM,QACbC,YAAY,EACZxC,KAAK,QAAD,OAAU4B,EAAV,eAAwBxC,GAAe+C,IAC3CpC,EAAGrF,EAAQqF,EAAElB,KAAI,SAACkB,GAAD,OAAOoC,CAAP,MAGrBtC,EAASvF,KAAK8H,EAbK,CAAC,EAevB,CAMD,OALAvC,EAAWA,EAAS1I,MAAK,SAACiJ,EAAGC,GAAO,IAAD,EACxB,CAACD,EAAGC,GAAGxB,KAAI,SAACC,GAAD,OAAOA,EAAEiD,KAAKU,QAAQ,IAAK,IAAIC,OAAO,IAAtC,IADa,mBAEjC,OADCtC,EADgC,OAC7BC,EAD6B,OAEjB,EAAI,CACrB,IACDR,EF7EuB,SAAC8C,GACxB,IADmC,EAC/BC,EAAI,EAD2B,cAEfD,GAFe,IAEnC,2BAA4B,CAAC,IAAlBE,EAAiB,QAC1BA,EAAMP,KAAOO,EAAMP,MAAQ,CAAC,EAC5B,IAAIQ,EAAU,EACVD,EAAMR,SACRO,GAAK,EACLE,EAAU,IAEZ,IAAMC,EAAIC,KAAMrD,GAAWiD,EAAIjD,GAAW5G,SAC1C8J,EAAMP,KAAKU,MAAQD,EAAEE,KAAKH,GAASI,MAAMC,SACzCP,GAAK,CACN,CAZkC,+BAanC,OAAOD,CACR,CE+DYS,CAAUvD,EAEtB,EAEKwD,GAAqB,SAAC,GAA6C,IAA3C5B,EAA0C,EAA1CA,gBAAiB6B,EAAyB,EAAzBA,mBAC7C,OACE,sBAAK/D,MAAO,CAAEgE,OAAQ,YAAtB,0BAEE,uBACE3F,KAAK,WACL4F,QAAS/B,EACTgC,SAAU,SAACtC,GAAD,OAAOmC,EAAmBnC,EAAEuC,OAAOF,QAAnC,MAIjB,EAEcG,GA9JG,SAAC,GAQZ,IAPL/C,EAOI,EAPJA,OACAL,EAMI,EANJA,OACAC,EAKI,EALJA,aACAtB,EAII,EAJJA,UACAoC,EAGI,EAHJA,QACAC,EAEI,EAFJA,QACAV,EACI,EADJA,gBAEA,EAA8CnJ,oBAAS,GAAvD,mBAAO+J,EAAP,KAAwB6B,EAAxB,KACMlF,EAA2B,SAAjBoC,EAA0B,eAAiB,WACrDzB,EAAcb,GAAe,CACjCC,MAAOyC,EACPxC,QAAS,CAACA,EAASc,GACnBb,WAAY,EAAC,GAAM,KAEfwB,EAAWD,GAAY,CAC3Bb,YAAaA,EACbX,QAASA,EACTc,UAAWA,EACXoC,QAASA,EACTC,QAASA,EACTE,gBAAiBA,IAEbX,EAAaR,GAAc,CAC/BpB,UAAWA,EACXoC,QAASA,EACTC,QAASA,EACThB,OAAQA,EACRC,aAAcA,IAEhB,OACE,qCACE,cAAC,GAAD,CAAoBiB,gBAAiBA,EAAiB6B,mBAAoBA,IAC1E,cAAC,KAAD,CACEvC,OAAQD,EACRnH,KAAMkG,EACNmB,kBAAkB,EAClBzB,MAAO,CAAE0B,MAAO,OAAQC,OAAQ,QAChC1F,QAAS,SAAC2F,GACR,IAAMxH,EAAOwH,EAAEE,OAAO,GAAG1H,KACzB,IAAIA,EAAK0I,OAAT,CAGA,IAAIjB,EAAU,CACZwC,KAAMlE,GAAc,CAAE3E,EAAGoG,EAAEE,OAAO,GAAGvC,EAAGI,UAAWA,KAEnC,SAAdvF,EAAKoI,OACPX,EAAQhD,GAAWzE,EAAKoI,MAE1BlB,EAAgBO,EAPf,CAQF,MAIR,ECnCcyC,GA3BF,SAAC,GAAkD,IAAhDjD,EAA+C,EAA/CA,OAAQkD,EAAuC,EAAvCA,gBAAiBjD,EAAsB,EAAtBA,gBACvC,OACE,qBAAKtB,MAAO,CAAE2B,OAAQ,SAAtB,SACgC,UAA7B4C,EAAgBC,SACf,cAAC,GAAD,CACEnD,OAAQA,EACRL,OAAQuD,EAAgBvD,OACxBC,aAAcsD,EAAgBtD,aAC9BtB,UAAW4E,EAAgB5E,UAC3BoC,QAASwC,EAAgBxC,QACzBC,QAASuC,EAAgBvC,QACzBV,gBAAiBA,IAGnB,cAAC,GAAD,CACED,OAAQA,EACRL,OAAQuD,EAAgBvD,OACxBC,aAAcsD,EAAgBtD,aAC9BtB,UAAW4E,EAAgB5E,UAC3BC,KAAM2E,EAAgBvC,QACtBV,gBAAiBA,KAK1B,E,oBCuDYmD,I,OAAW,SAACC,GACvB,OAAOA,EAAExB,QAAQ,IAAK,IAAIA,QAAQ,IAAK,IAAIA,QAAQ,IAAK,GACzD,GCSKyB,GAAoB,SAAC,GASpB,IARLC,EAQI,EARJA,KACAC,EAOI,EAPJA,QACAC,EAMI,EANJA,eACAC,EAKI,EALJA,aACAC,EAII,EAJJA,gBACAT,EAGI,EAHJA,gBAGI,EAFJU,uBAEI,EADJC,0BAEA,OACE,sBACElF,MAAK,2BAAO,CAAEmF,UAAW,QAAaP,EAAO,CAAC,EAAI,CAAEQ,QAAS,SAD/D,UAGE,uBACE/G,KAAK,WACLlE,GAAIkL,GAAaR,GACjBS,gBACGf,EAAgBgB,uBAAuBzK,SAAS+J,GAEnDX,SAAU,SAACtC,GACT4D,GAAmB,CACjBC,aAAc,WACdC,IAAKb,EACLG,gBAAiBA,GAEpB,IAEH,wBAAOW,IAAKN,GAAaR,GAAzB,qBAAgDA,KAChD,qBAAK7E,MAAO,CAAE4F,WAAY,OAA1B,SACGd,EAAeD,GAASvF,KAAI,SAACC,GAC5B,OACE,gCACE,uBACEpF,GAAI0L,GAAStG,GACblB,KAAK,WACLiH,gBAAiBf,EAAgBuB,mBAAmBhL,SAASyE,GAC7DwG,SACGxB,EAAgBgB,uBAAuBzK,SAAS+J,KAC9CE,EAAaiB,SAASnB,KACvBN,EAAgBgB,uBAAuBzK,SAAS+J,MAC9CE,EAAaiB,SAASnB,GAE5BX,SAAU,kBACRsB,GAAmB,CACjBC,aAAc,OACdC,IAAKnG,EACLyF,gBAAiBA,GAJX,IAQZ,wBAAOW,IAAKE,GAAStG,GAArB,qBAAsCA,OAG3C,QAIR,EAEKiG,GAAqB,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,aAAcC,EAA2B,EAA3BA,IAAKV,EAAsB,EAAtBA,gBACzCiB,EAAyB,SAAjBR,EAA0B,WAAa,OACrDT,GAAgB,SAACkB,GACf,IAAIC,EAAUD,EAAET,GACVW,EAAWF,EAAED,GACnBE,EAAQT,IAAQS,EAAQT,GACxB,IAAIW,EAAM,CAAC,EAGX,OAFAA,EAAIZ,GAAgBU,EACpBE,EAAIJ,GAASG,EACNC,CACR,GACF,EAEKC,GAAa,SAACxB,GAClB,OAAOzN,EAAkB,CAAEC,MAAOgC,OAAOC,KAAKuL,KAAmBxF,KAAI,SAACkE,GACpE,MAAO,CACL+C,cAAe/C,EACf9H,MAAO+I,GAASjB,GAChBgD,MAAOhD,EAEV,GACF,EAEK6B,GAAe,SAACoB,GACpB,MAAM,GAAN,OAAUhC,GAASgC,GAAnB,aACD,EAEKZ,GAAW,SAACrC,GAChB,MAAM,GAAN,OAAUiB,GAASjB,GAAnB,SACD,EAEckD,GAnLO,SAAC,GAMhB,IALL9B,EAKI,EALJA,KACA+B,EAII,EAJJA,QACA7B,EAGI,EAHJA,eACAP,EAEI,EAFJA,gBACAqC,EACI,EADJA,mBAEMnI,EAAU6H,GAAWxB,GAC3B,EAA4C3M,mBAASsG,EAAQ,IAA7D,mBAAOoI,EAAP,KAAuBC,EAAvB,KACA,EAA4D3O,mBAAS,IAArE,mBAAO8M,EAAP,KAA+BC,EAA/B,KACA,EAAwC/M,mBAAS,CAC/C6N,SAAU,CAAC,EACXe,KAAM,CAAC,IAFT,mBAAOhC,EAAP,KAAqBC,EAArB,KAIMgC,EAAOH,EAAeN,cACtBU,EAAc,WAClBjC,EAAgB,CAAEgB,SAAU,CAAC,EAAGe,KAAM,CAAC,IACvCJ,GAAQ,EACT,EACD,OACE,8BACE,eAACO,GAAA,EAAD,CAAOtC,KAAMA,EAAb,UACE,cAACsC,GAAA,EAAMC,OAAP,UACE,mDAEF,eAACD,GAAA,EAAME,KAAP,oCAEE,cAAC,KAAD,CACE3I,QAASA,EACT4I,aAAcR,EACd3C,SAAU,SAACoD,GAAD,OAASR,EAAkBQ,EAA3B,IAEXhO,OAAOC,KAAKuL,GAAgBxF,KAAI,SAACmH,GAChC,OACE,cAAC,GAAD,CACE5B,QAAS4B,EACT3B,eAAgBA,EAChBC,aAAcA,EACdC,gBAAiBA,EACjBT,gBAAiBA,EACjBU,uBAAwBA,EACxBC,0BAA2BA,EAC3BN,KAAM6B,IAAOO,GAGlB,OAEH,eAACE,GAAA,EAAMK,OAAP,WACE,wBACEtL,QAAS,WACP2K,GAAmB,SAACV,GAElB,IADA,IAAIsB,EAAMtB,EAAEX,uBADY,aAEnB,IAAMkB,EAAE,KACP1B,EAAaiB,SAASS,KACpBe,EAAI1M,SAAS2L,GACfe,EAAMA,EAAIxM,QAAO,SAACuE,GAAD,OAAOA,IAAMkH,CAAb,IAEjBe,EAAIzM,KAAK0L,GAPS,EAExB,MAAiBnN,OAAOC,KAAKwL,EAAaiB,UAA1C,eAAsD,IAUtD,IADA,IAAIyB,EAAKvB,EAAEJ,mBAXa,aAYnB,IAAMtC,EAAC,KACNuB,EAAagC,KAAKvD,KAChBiE,EAAG3M,SAAS0I,GACdiE,EAAKA,EAAGzM,QAAO,SAACuE,GAAD,OAAOA,IAAMiE,CAAb,IAEfiE,EAAG1M,KAAKyI,GAjBU,EAYxB,MAAgBlK,OAAOC,KAAKwL,EAAagC,MAAzC,eAAiD,IASjD,OAAO,2BACFb,GACA,CAAEX,uBAAwBiC,EAAK1B,mBAAoB2B,GAEzD,IACDR,GACD,EA7BH,kBAiCA,wBAAQhL,QAAS,kBAAMgL,GAAN,EAAjB,2BAKT,ECnBcS,GAtEE,SAAC,GAAmE,IAAD,EAAjE9C,EAAiE,EAAjEA,KAAM+B,EAA2D,EAA3DA,QAASpC,EAAkD,EAAlDA,gBAAiBqC,EAAiC,EAAjCA,mBAAoBe,EAAa,EAAbA,QAC7DC,EAAmB,CAAC,EADsD,cAE9DD,GAF8D,IAEhF,2BAA0B,CAAC,IAAhBE,EAAe,QACtBD,EAAiBC,GAAOtD,EAAgBuD,aAAahN,SAAS+M,GAAO,OACjEtD,EAAgBwD,cAAcjN,SAAS+M,GAAO,SAAW,KAEhE,CAN+E,+BAOhF,MAAgC1P,mBAASyP,GAAzC,mBAAOI,EAAP,KAAiBC,EAAjB,KACMhB,EAAc,SAACiB,GACjBtB,GAAmB,SAAAV,GACf,IAAIiC,EAAS,CACTL,aAAcxO,OAAOC,KAAK2O,GAAelN,QAAO,SAAAoN,GAAC,MAAyB,SAArBF,EAAcE,EAAlB,IACjDL,cAAezO,OAAOC,KAAK2O,GAAelN,QAAO,SAAAoN,GAAC,MAAyB,WAArBF,EAAcE,EAAlB,KAEtD,OAAO,2BAAIlC,GAAMiC,EACpB,IACDxB,GAAQ,EACX,EACD,OACI,8BACF,eAACO,GAAA,EAAD,CAAOtC,KAAMA,EAAb,UACE,cAACsC,GAAA,EAAMC,OAAP,UACE,8CAEF,cAACD,GAAA,EAAME,KAAP,UACI,kCACI,gCACI,+BACA,uBACC,CAAC,WAAY,YAAa,cAAc9H,KAAI,SAAAoF,GACzC,OAAO,oBAAI1E,MAAO,CAACqI,UAAW,SAAUC,QAAS,OAA1C,SAAmD5D,GAC7D,SAGL,gCACKiD,EAAQrI,KAAI,SAAAuI,GACT,OACI,+BACI,6BAAKA,IACJ,CAAC,MAAO,OAAQ,UAAUvI,KAAI,SAAA4G,GAC3B,IAAMjC,GAAW+D,EAASH,IAAQ,SAAW3B,EAC7C,OAAO,oBAAIlG,MAAO,CAACqI,UAAW,UAAvB,SACH,uBAAOhK,KAAK,QAAQqE,KAAMmF,EAAKnM,MAAOwK,EAAGZ,eAAgBrB,EAASC,SAAU,SAACtC,GACzEqG,GAAY,SAAAvD,GACR,IAAIyD,EAAS,CAAC,EAEd,OADAA,EAAOvG,EAAEuC,OAAOzB,MAAQd,EAAEuC,OAAOzI,MAC1B,2BAAIgJ,GAAMyD,EACpB,GACJ,KAER,MAGZ,WAIb,eAACjB,GAAA,EAAMK,OAAP,WACE,wBACEtL,QAAS,kBAAMgL,EAAYe,EAAlB,EADX,kBAKA,wBAAQ/L,QAAS,kBAAMgL,EAAYW,EAAlB,EAAjB,2BAKT,ECqBKW,GAAmB,SAAC,GAQnB,IAPL/B,EAOI,EAPJA,MACA/H,EAMI,EANJA,QACA+J,EAKI,EALJA,aACAjE,EAII,EAJJA,gBACAqC,EAGI,EAHJA,mBACAxO,EAEI,EAFJA,aACAC,EACI,EADJA,gBAaIgP,GAXJ5I,EAAUA,EACPa,KAAI,SAACgI,GACJ,MAAsB,kBAARA,EAAoBA,EAAM,CAAE5L,MAAO4L,EAAKd,MAAOc,GAASA,CACvE,IACAhI,KAAI,SAACgI,GACJ,MAAO,CACLf,cAAee,EAAI5L,MACnBA,MAAO+I,GAAS6C,EAAI5L,OACpB8K,MAAOc,EAAId,MAEd,KACwBxL,QACzB,SAACsM,GAAD,OAASA,EAAIf,gBAAkBhC,EAAgBiE,EAA/C,IA2DF,OACE,sBAAKxI,MAAO,CAAE0B,MAAO,QAASkE,WAAY,QAA1C,UACGY,EACD,cAAC,KAAD,CAAQ/H,QAASA,EAAS/C,MAAO2L,EAAcnD,SA5DlC,SAACtC,GAChB,IAAMlG,EAAQkG,EAAE2E,cAMhB,GALAkC,GAAqB,CACnB/C,IAAK8C,EACLE,IAAKhN,EACLiN,aAAc/B,IAEK,cAAjB4B,EACF,GAAiC,UAA7BjE,EAAgBC,SAClB,GAAc,SAAV9I,EAAkB,CACpB,IAAMkN,EAAarE,EAAgBxC,QAAQ/C,MAAM,EAAG,GACpDyJ,GAAqB,CACnB/C,IAAK,UACLgD,IAAKE,EACLD,aAAc/B,IAEhB6B,GAAqB,CACnB/C,IAAK,UACLgD,IAAKnE,EAAgBvC,QAAQhD,MAAM,EAAG,GACtC2J,aAAc/B,IAEZgC,EAAa,MAAQxQ,GACvBC,EAAgBuQ,EAAa,MAEhC,MACCH,GAAqB,CACnB/C,IAAK,UACLgD,IAAKnE,EAAgBxC,QAAU,MAC/B4G,aAAc/B,IAEhB6B,GAAqB,CACnB/C,IAAK,UACLgD,IAAKnE,EAAgBvC,QAAU,MAC/B2G,aAAc/B,SAIlB,GAAc,SAAVlL,EAAkB,CACpB,IAAMmN,EAAUtE,EAAgBvC,QAAQhD,MAAM,EAAG,GACjDyJ,GAAqB,CACnB/C,IAAK,UACLgD,IAAKG,EACLF,aAAc/B,IAEZiC,EAAU,MAAQzQ,GACpBC,EAAgBwQ,EAAU,MAE7B,MACCJ,GAAqB,CACnB/C,IAAK,UACLgD,IAAKnE,EAAgBvC,QAAU,MAC/B2G,aAAc/B,GAKvB,MAOF,EAEK6B,GAAuB,SAAC,GAAgC,IAA9B/C,EAA6B,EAA7BA,IAAKgD,EAAwB,EAAxBA,KACnCC,EAD2D,EAAnBA,eAC3B,SAACzC,GACZ,IAAI4C,EAAW,CAAC,EAEhB,OADAA,EAASpD,GAAOgD,EACT,2BAAKxC,GAAM4C,EACnB,GACF,EAEcC,GAtLI,SAAC,GAOb,IANLxE,EAMI,EANJA,gBACAqC,EAKI,EALJA,mBACAoC,EAII,EAJJA,YACAC,EAGI,EAHJA,SACAnE,EAEI,EAFJA,eACA6C,EACI,EADJA,QAEA,EAAoD9L,qBAAWhE,GAAvDe,EAAR,EAAQA,SAAUR,EAAlB,EAAkBA,aAAcC,EAAhC,EAAgCA,gBAChC,EAAkDF,oBAAS,GAA3D,mBAAO+Q,EAAP,KAA0BC,EAA1B,KACA,EAAwChR,oBAAS,GAAjD,mBAAOiR,EAAP,KAAqBC,EAArB,KAEMC,EHnBuB,SAAC,GAKzB,IAJL1Q,EAII,EAJJA,SACAoQ,EAGI,EAHJA,YACAzE,EAEI,EAFJA,gBACA0E,EACI,EADJA,SAEMK,EAAe,CACnB,CACE,CACE9C,MAAO,oBACP/H,QAASnF,OAAOC,KAAKX,EAASkM,gBAAgB9J,QAC5C,SAACyL,GAAD,MAAe,aAAPA,CAAR,IAEF+B,aAAc,kBAEhB,CACEhC,MAAO,mBACP/H,QAASnF,OAAOC,KAAKX,EAAS2Q,iBAAiBvO,QAC7C,SAACyL,GAAD,MAAe,aAAPA,CAAR,IAEF+B,aAAc,0BAGlB,CACE,CACEhC,MAAO,mBACP/H,QAAS,CAAC,CAAE/C,MAAO,UAAW8K,MAAO,YACrCgC,aAAc,UAEhB,CACEhC,MAAO,YACP/H,QAAS,CACP,CAAE/C,MAAO,QAAS8K,MAAO,SACzB,CAAE9K,MAAO,eAAgB8K,MAAO,kBAElCgC,aAAc,YAEhB,CACEhC,MAAO,gBACP/H,QAASuK,EACTR,aAAc,iBAGlB,CACE,CACEhC,MAAO,aACP/H,QAAS,CACP,CAAE/C,MAAO,QAAS8K,MAAO,SACzB,CAAE9K,MAAO,OAAQ8K,MAAO,SAE1BgC,aAAc,eAIdgB,EAAUF,EAAa9P,OAAS,EA2BtC,MA1BiC,UAA7B+K,EAAgBC,SAClB8E,EAAaE,GAAWF,EAAaE,GAAStO,OAAO,CACnD,CACEsL,MAAM,SAAD,OAC2B,UAA9BjC,EAAgB5E,UAAwB,QAAU,QAEpDlB,QAASwK,EACTT,aAAc,WAEhB,CACEhC,MAAM,OAAD,OAC2B,UAA9BjC,EAAgB5E,UAAwB,QAAU,QAEpDlB,QAASwK,EACTT,aAAc,aAIlBc,EAAaE,GAAWF,EAAaE,GAAStO,OAAO,CACnD,CACEsL,MAAqC,UAA9BjC,EAAgB5E,UAAwB,QAAU,OACzDlB,QAASwK,EACTT,aAAc,aAIbc,CACR,CG/DsBG,CAAgB,CACnC7Q,SAAUA,EACVoQ,YAHFA,EAAc,CAAC,CAAEtN,MAAO,OAAQ8K,MAAO,QAAStL,OAAO8N,GAIrDzE,gBAAiBA,EACjB0E,SAAUA,IAENS,EAAUJ,EAAahK,KAAI,SAACqK,GAChC,IAAMC,EAAkBD,EAASrK,KAAI,SAACuK,GACpC,OACE,cAAC,GAAD,aAEEtF,gBAAiBA,EACjBqC,mBAAoBA,EACpBxO,aAAcA,EACdC,gBAAiBA,GACbwR,GALCA,EAAIrB,aAQd,IACD,OACE,qBACExI,MAAO,CAAEoF,QAAS,OAAQD,UAAW,OADvC,SAIGyE,GAFID,EAAS,GAAGnB,aAKtB,IA4CD,OA3CAkB,EAAQ3O,KACN,sBAAKiF,MAAO,CAAEgE,OAAQ,QAAtB,UACE,wBACE/H,QAAS,kBAAMkN,GAAqB,EAA3B,EACTnJ,MAAO,CAAE8J,YAAa,OAFxB,6BAMA,wBAAQ7N,QAAS,kBAAMoN,GAAgB,EAAtB,EAAjB,wBACA,cAAC,GAAD,CACEzE,KAAMsE,EACNvC,QAASwC,EACT5E,gBAAiBA,EACjBqC,mBAAoBA,EACpB9B,eAAgBA,IAElB,cAAC,GAAD,CACEF,KAAMwE,EACNzC,QAAS0C,EACT9E,gBAAiBA,EACjBqC,mBAAoBA,EACpBe,QAASA,QAIf+B,EAAQ3O,KACN,qCACE,uBACEsD,KAAK,WACLlE,GAAI,yBACJmL,eAAgBf,EAAgBwF,SAChC7F,SAAU,WACRuE,GAAqB,CACnB/C,IAAK,WACLgD,KAAMnE,EAAgBwF,SACtBpB,aAAc/B,GAEjB,IAEH,uBAAOjB,IAAK,yBAAZ,0CAGJ+D,EAAQ3O,KAAK,wBACN,mCAAG2O,GACX,ECxCcM,GAjDe,SAAC,GAO7B,IAHK,IAHL5O,EAGI,EAHJA,aACA0J,EAEI,EAFJA,eACAyE,EACI,EADJA,gBAEMU,EAAqB3Q,OAAOC,KAAKgQ,GAAmB,CAAC,GACvDW,EAAiB,CAAC,EACtB,MAAiB5Q,OAAOC,KAAKuL,GAAkB,CAAC,GAAhD,eAAoD,CAA/C,IAA+C,EAAzC2B,EAAE,KAAuC,cAClC3B,EAAe2B,IADmB,IAClD,2BAAoC,CAClCyD,EADkC,SACdzD,CACrB,CAHiD,+BAInD,CACD,IARI,EAQA0D,EAAa,GARb,cASW/O,GATX,IASJ,2BAA6B,CAAC,IAArBC,EAAoB,QAa3B,GAZI4O,EAAmBnP,SAASO,EAAG+O,YACjC/O,EAAG+O,SAAWb,EAAgBlO,EAAG+O,WAEnC/O,EAAG4F,aAAeiJ,EAAe7O,EAAG+O,WAAa,OACjD/O,EAAGgD,KAAOhD,EAAGsF,OAAS,EAAI,UAAY,SACtCtF,EAAGgP,KAAOhP,EAAGgP,MAAQ,GACE,kBAAZhP,EAAGgP,OACZhP,EAAGgP,KAAOhP,EAAGgP,KAAKC,MAAM,KAAKhL,KAAI,SAAAC,GAAC,OAAIA,EAAEgL,cAAcC,MAApB,KAEpCnP,EAAGgP,KAAOhP,EAAGgP,KAAKrP,QAAO,SAACoN,GAAD,MAAoB,KAAbA,EAAEoC,MAAT,IACzBnP,EAAGV,MAAQJ,IAAMc,EAAGgJ,MAAM3J,OAAO,WACjCW,EAAGoP,KAAOlQ,IAAMc,EAAGgJ,MAAM3J,OAAO,QAC1BW,EAAG0O,SAAU,CACjB1O,EAAG0O,SAAWW,SAASrP,EAAG0O,UAC1B1O,EAAGsP,gBAAiB,EACpB,IAAK,IAAItH,EAAE,EAAGA,EAAEhI,EAAG0O,SAAU1G,IAAI,CAC/B,IAAMuH,EAAU,CACdvG,KAAM9J,IAAMc,EAAGgJ,MAAM5J,IAAI4I,EAAG,SAAS3I,OAAO,cAC5CiG,OAAQtF,EAAGsF,OAAStF,EAAG0O,SACvBY,gBAAgB,EAChBE,kBAAkB,GAEpBD,EAAQjQ,MAAQJ,IAAMqQ,EAAQvG,MAAM3J,OAAO,WAC3CkQ,EAAQH,KAAOlQ,IAAMqQ,EAAQvG,MAAM3J,OAAO,QAC1CyP,EAAWpP,KAAX,2BAAoBM,GAAOuP,GAC5B,CACF,CACF,CArCG,+BAsCJ,OAAOxP,EAAaF,OAAOiP,GACxBnP,QAAO,SAACK,GAAD,MAA4B,WAApBA,EAAG4F,YAAX,IACP3B,KAAI,SAACjE,GACJ,OAAO,2BAAKA,GAAO,CAAEsF,OAAQmK,KAAKC,IAAI1P,EAAGsF,SAC1C,GACJ,ECyIcqK,GAhLF,SAAC,GAAiB,IAAfpP,EAAc,EAAdA,QACd,EASIC,qBAAWhE,GARbiB,EADF,EACEA,YACAC,EAFF,EAEEA,eACAL,EAHF,EAGEA,OACAE,EAJF,EAIEA,SACAR,EALF,EAKEA,aACAE,EANF,EAMEA,aACAD,EAPF,EAOEA,gBACAW,EARF,EAQEA,YAEF,EAA8Cb,mBAAS,CACrD8S,oBAAgBC,EAChBC,2BAAuBD,EACvBlK,OAAQ,UACR8E,mBAAoB,GACpBP,uBAAwB,GACxBuC,aAAc,GACdC,cAAe,GACfvD,SAAU,QACVvD,aAAc,OACdtB,UAAW,QACXoC,aAASmJ,EACTlJ,aAASkJ,EACTnB,UAAU,IAbZ,mBAAOxF,EAAP,KAAwBqC,EAAxB,KAeA,EAAwCzO,mBAAS,CAAC,GAAlD,mBAAOiT,EAAP,KAAqB9J,EAArB,KACA,EAAsCnJ,mBAASa,GAA/C,mBAAOqS,EAAP,KAAoBC,EAApB,KACApS,qBAAU,WACRoS,EAAetS,EAChB,GAAE,CAACA,IACJE,qBAAU,WACFqL,EAAgBxC,SACpB1J,GAAgB,SAACwC,GACf,IAAMgO,EAC+B,IAAnCtE,EAAgBxC,QAAQvI,OACpB+K,EAAgBxC,QAAU,MAC1BwC,EAAgBxC,QACtB,OAAO8G,EAAUhO,EAAIgO,EAAUhO,CAChC,GAEJ,GAAE,CAAC0J,EAAgBxC,QAAS1J,IAC7Ba,qBAAU,WACFN,GAAcR,GAAkBE,GACpCsO,GAAmB,SAACV,GAClB,IAAIiC,EAAS,CAAC,EAed,OAdOjC,EAAE+E,iBACP9C,EAAO8C,gBAAkBrS,EAASkM,gBAAkB,CAAC,GAAGyG,UAEnDrF,EAAEqD,kBACPpB,EAAOgD,uBACLvS,EAAS2Q,iBAAmB,CAAC,GAC7BgC,UAEGrF,EAAEnE,UACPoG,EAAOpG,QAAU3J,GAEZ8N,EAAElE,UACPmG,EAAOnG,QAAU1J,GAEZ,2BAAK4N,GAAMiC,EACnB,GAEJ,GAAE,CAACvP,EAAUR,EAAcE,IAE5B,IADA,IAAIsG,EAAQ,GACZ,MAAgBtF,OAAOC,KAAKb,GAAU,CAAC,GAAvC,eAA2C,CAAtC,IAAMwB,EAAC,KACV0E,EAAQA,EAAM1D,OACZ8O,GAAsB,CACpB5O,aAAc1C,EAAOwB,GACrB4K,eAAgBlM,EAASkM,eAAeP,EAAgB0G,gBACxD1B,gBACE3Q,EAAS2Q,gBAAgBhF,EAAgB4G,yBAGhD,CAID,GAHOrS,GACL8C,EAAQb,KAAK,qBAGVnC,IACA2L,EAAgB0G,iBAChB1G,EAAgB4G,sBAEnB,OAAO,6CAET,IArF4B,EAqFxBxD,EAAU,GArFc,cAsFX/I,GAtFW,IAsF5B,2BAAwB,CAAC,IAAdvD,EAAa,QACtBsM,EAAUA,EAAQzM,OAAOG,EAAGgP,MAAQ,GACrC,CAxF2B,+BAyF5B1C,EAAUtQ,EAAkB,CAAEC,MAAOqQ,IACrC/I,EAAQA,EAAM5D,QAAO,SAACK,GACpB,OACEA,EAAGkJ,EAAgB5E,YAAc4E,EAAgBxC,SACjD1G,EAAGkJ,EAAgB5E,YAAc4E,EAAgBvC,SACjD3G,EAAGgD,OAASkG,EAAgBvD,SAC3BuD,EAAgBuB,mBAAmBhL,SAASO,EAAG+O,YAC/C7F,EAAgBgB,uBAAuBzK,SAASO,EAAG4F,gBACnD5F,EAAGgP,MAAQ,IACT/K,KAAI,SAACuI,GACJ,OAAOtD,EAAgBuD,aAAahN,SAAS+M,GAAO,EAAI,CACzD,IACAjH,QAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,CAAd,GAAiB,KAAOyD,EAAgBuD,aAAatO,QAK7B,KAJjC6B,EAAGgP,MAAQ,IACT/K,KAAI,SAACuI,GACJ,OAAOtD,EAAgBwD,cAAcjN,SAAS+M,GAAO,EAAI,CAC1D,IACAjH,QAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,CAAd,GAAiB,KAC1ByD,EAAgBwF,UAAY1O,EAAGsP,gBAAkBtP,EAAGwP,iBAExD,IACDjM,EAAQA,EAAM5D,QAAO,SAACK,GACpB,MAAoC,UAA7BkJ,EAAgBC,SACnBnJ,EAAGkJ,EAAgB5E,YAAc4E,EAAgBxC,SAC/C1G,EAAGkJ,EAAgB5E,YAAc4E,EAAgBvC,QACnD3G,EAAGkJ,EAAgB5E,aAAe4E,EAAgBvC,OACvD,IACD,IAAMgH,EAAc3R,EAAkB,CACpCC,MAAOsH,EAAMU,KAAI,SAACjE,GAAD,OAAQA,EAAG4F,YAAX,MAEnBrC,EAAQA,EAAM5D,QAAO,SAACK,GACpB,MAAwC,SAAjCkJ,EAAgBtD,cAEnB5F,EAAG4F,eAAiBsD,EAAgBtD,YACzC,IACD,IAAMgI,Ed5HuB,SAAC,GAQ9B,IAHK,IAJLlH,EAII,EAJJA,QACAC,EAGI,EAHJA,QACArC,EAEI,EAFJA,UAEI,IADJpI,eACI,SACA0R,EAAW,GACXrJ,EAAOmC,EACJnC,GAAQoC,GAAS,CACtB,IAAMoG,EAAIxI,EACVqJ,EAASlO,KAAKqN,GACdxI,EAAOrF,IAAM6N,GAAmB,UAAdzI,EAAwB,MAAQ,WAC/ClF,IAAI,EAAGkF,GACPjF,OAAqB,UAAdiF,EAAwB,UAAY,OAC/C,CAID,OAHIpI,GACF0R,EAAS1R,UAEJ0R,CACR,CcyGkBuC,CAAgB,CAC/BzJ,QAASnJ,EAASyB,QAAQC,SAC1B0H,QAASpJ,EAASyB,QAAQG,SAC1BmF,UAAW4E,EAAgB5E,UAC3BpI,SAAS,IAEX,OACE,qCACE,wBACE0E,QAAS,WbnBGwP,OAAOC,QAAQ,uCAIjCjV,EAAI0C,OAAOwS,UaiBH5S,IACA6C,EAAQb,KAAK,mBACd,EALH,sBASA,cAAC,GAAD,CACEwJ,gBAAiBA,EACjBqC,mBAAoBA,EACpBoC,YAAaA,EACbC,SAAUA,EACVnE,eAAgBlM,EAASkM,eAAeP,EAAgB0G,gBACxDtD,QAASA,IAEV0D,EACC,oBAAIrL,MAAO,CAAEqI,UAAW,UAAxB,yCAEA,qCACE,eAACuD,EAAA,EAAD,CAAWC,iBAAiB,IAA5B,UACE,cAACD,EAAA,EAAUE,OAAX,CAAkBC,SAAS,IAA3B,yBACA,cAACH,EAAA,EAAUI,SAAX,CAAoBD,SAAS,IAA7B,SACE,cAAC,GAAD,CACE1K,OAAQzC,EACR2F,gBAAiBA,EACjBjD,gBAAiBA,SAIvB,uBACA,eAACsK,EAAA,EAAD,CAAWC,iBAAiB,IAA5B,UACE,cAACD,EAAA,EAAUE,OAAX,CAAkBC,SAAS,IAA3B,0BACA,cAACH,EAAA,EAAUI,SAAX,CAAoBD,SAAS,IAA7B,SACE,cAAC,GAAD,CAAO3Q,aAAcwD,EAAOZ,aAAcoN,cAOvD,E,oDCpLKa,GAAY9U,EAAGsC,WAAW,UAoB1ByS,GAAU,yCAAG,WAAO9R,GAAP,sCAAAyG,EAAA,oEACHzG,GADG,IACjB,4BAASoB,EAAW,SAChB6I,KAAO,IAAI8H,KAAKA,KAAKC,MAAM5Q,EAAE6I,OAAOgI,cAAcC,UAAU,EAAG,GAFlD,+BAIXC,EAAYlV,EAAkB,CAClCC,MAAO8C,EAAKkF,KAAI,SAAC9D,GAAD,OAAOA,EAAE6I,KAAKrF,MAAM,EAAG,EAAvB,MAEdwN,EAAa,CAAC,EACdC,EAAa,CAAC,EARD,cASDF,GATC,gEASN1R,EATM,QAUf4R,EAAW5R,GAAK,GAVD,UAWO6R,GAAe7R,GAXtB,QAWf2R,EAAW3R,GAXI,sJAajBT,EAAKkF,KAAI,SAAC9D,GACR,OAAOiR,EAAWjR,EAAE6I,KAAKrF,MAAM,EAAG,IAAIjE,KAAKS,EAC5C,IAfgB,cAgBD+Q,GAhBC,IAgBjB,IAhBiB,iBAgBN1R,EAhBM,QAiBX+D,EAAQ4N,EAAW3R,GAAGK,OAAOuR,EAAW5R,IAC5CoR,GACGhS,IAAIY,GACJ8R,IAAI,CAAEvR,aAAcwD,GAAS,CAAEgO,OAAO,IACtCzQ,MAAK,WACJsP,OAAOoB,MAAM,gDAAkDhS,EAChE,IACAwB,OAAM,SAACuF,GACN6J,OAAOoB,MAAM,kDAAmDjL,EACjE,GA1BY,EAgBjB,uBAA4B,GAhBX,+FAAH,sDA8BV8K,GAAc,yCAAG,WAAO7R,GAAP,gBAAAgG,EAAA,sEACGiM,GAAoBjS,GADvB,cACjBkS,EADiB,yBAEdA,EAAY3R,cAAgB,IAFd,2CAAH,sDAKd0R,GAAsB,SAACjS,GAgB3B,OAfgBoR,GACbhS,IAAIY,GACJmS,MACA7Q,MAAK,SAAUlC,GACd,OAAIA,EAAIgT,OACChT,EAAIG,QAEX8S,GAAarS,GACN,CAAEO,aAAc,IAE1B,IACAiB,OAAM,SAAUC,GAEf,OADAC,QAAQC,IAAI,4BAA6BF,GAClC,IACR,GAEJ,EAED,SAAS4Q,GAAarS,GACpB,IAAMsS,EAAqBhW,EAAG8C,IAAI,oBAClCkT,EACGH,MACA7Q,MAAK,SAAUlC,GACd,IAAMG,EAAOH,EAAIG,OACbS,EAAIT,EAAKE,SACX6S,EAAmBR,IAAI,CAAErS,SAAUO,GAAK,CAAE+R,OAAO,IACxC/R,EAAIT,EAAKI,UAClB2S,EAAmBR,IAAI,CAAEnS,SAAUK,GAAK,CAAE+R,OAAO,GAEpD,IACAvQ,OAAM,SAAUC,GAEf,OADAC,QAAQC,IAAI,2BAA4BF,GACjC,IACR,GACJ,CAEc8Q,OA1FE,WAOf,OACE,cAAC,KAAD,CACEC,SAAS,mBACT7G,MAAM,uBACN8G,cAVqB,CACvBC,QAAQ,EACRC,eAAe,EACfC,gBAAgB,EAChBC,gBAAiB,SAACH,GAAD,OAAYA,EAAOhD,cAAcrH,QAAQ,MAAO,IAAhD,GAOfyK,aAAczB,GACd0B,QAAS,SAAChM,GAAD,OAAOrF,QAAQC,IAAIoF,EAAnB,GAGd,E,8BCEciM,GArBC,WACd,OACE,eAACC,GAAA,EAAD,CAAQC,GAAG,OAAOC,QAAQ,OAAOC,OAAO,KAAxC,UACE,cAACH,GAAA,EAAOI,MAAR,CAAcC,GAAIC,KAAMC,GAAG,aAA3B,0BAGA,cAACP,GAAA,EAAOhC,OAAR,CAAe,gBAAc,qBAC7B,cAACgC,GAAA,EAAO9B,SAAR,CAAiB7R,GAAG,mBAApB,SACE,eAACmU,GAAA,EAAD,CAAKtS,UAAU,UAAf,UACE,cAACsS,GAAA,EAAIF,KAAL,CAAUD,GAAIC,KAAMC,GAAG,oBAAvB,oBAGA,cAACC,GAAA,EAAIF,KAAL,CAAUD,GAAIC,KAAMC,GAAG,kBAAvB,yBAOT,E,mBCuGcE,GArHU,WACvB,MAAgC1S,qBAAWhE,GAAnCiB,EAAR,EAAQA,YAAaJ,EAArB,EAAqBA,OACrB,EAA4CP,mBAAS,IAArD,mBAAOqW,EAAP,KAAuBC,EAAvB,KACMC,EAAyB,WAE7B,IADA,IAAMC,EAAQ,GACd,MAAqBrV,OAAOsV,OAAOlW,GAAU,CAAC,GAA9C,eAAkD,CAA7C,IAA6C,EAAvCmW,EAAM,KAAiC,cAChCA,GADgC,IAChD,2BAAwB,CAAC,IAAdrT,EAAa,QAChBA,EAAE6O,OACN7O,EAAE6O,KAAyB,kBAAX7O,EAAE6O,KAAoB7O,EAAE6O,KAAO7O,EAAE6O,KAAKyE,KAAK,MAE7DH,EAAM5T,KAAKS,EACZ,CAN+C,+BAOjD,CACD,OAAOmT,CACR,EACD,EAAkCxW,mBAASuW,KAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KACA,IAAKlW,EACH,OAAO,6CA8BT,OACE,gCACE,wBACEmD,QAAS,WACP+S,EAAaN,KACbD,EAAkB,GACnB,EAJH,sBAQA,wBAAQxS,QAtCQ,WAAO,IAAD,gBACR5E,EAAkB,CAAEC,MAAOkX,KADnB,yBACb3T,EADa,QAEhBoU,EAAYF,EAAU/T,QAAO,SAACQ,GAAD,OAAOA,EAAE6I,KAAKrF,MAAM,EAAG,KAAOnE,CAA9B,IACnCoR,GACGhS,IAAIY,GACJ8R,IAAI,CAAEvR,aAAc6T,GAAa,CAAErC,OAAO,IAC1CzQ,MAAK,WACJsP,OAAOoB,MAAM,gDAAkDhS,EAChE,IACAwB,OAAM,SAACuF,GACN6J,OAAOoB,MAAM,kDAAmDjL,EACjE,IACEtI,OAAOC,KAAKb,GAAQoC,SAASD,IAChCqS,GAAarS,EAbO,EACxB,2BAA+D,GADvC,+BAgBxB4T,EAAkB,GACnB,EAqBG,sBACA,cAAC,KAAD,CACES,KAAMV,EAAehV,OAAS,EAC9BiD,QACE,kEAGJ,cAAC,IAAD,CACEyB,MAAO,uBACP9D,KAAM2U,EACN9Q,QA9BU,CACd,CAAEC,MAAO,OAAQC,MAAO,OAAQC,YAAa,QAC7C,CAAEF,MAAO,cAAeC,MAAO,eAC/B,CAAED,MAAO,SAAUC,MAAO,UAC1B,CAAED,MAAO,WAAYC,MAAO,YAC5B,CAAED,MAAO,WAAYC,MAAO,YAC5B,CAAED,MAAO,OAAQC,MAAO,QACxB,CAAED,MAAO,UAAWC,MAAO,WAC3B,CAAED,MAAO,wBAAyBC,MAAO,aAuBrCK,MAAO9B,GACP+B,QAAS,CAAEC,WAAW,GACtByQ,SAAU,CACRC,SAAU,SAACjU,GAAD,OACR,IAAIkU,SAAQ,SAACC,EAASC,GACpBC,YAAW,WACTR,EAAa,GAAD,oBAAKD,GAAL,CAAgB5T,KAC5BsT,EAAkB,GAAD,oBACZD,GADY,CAEfrT,EAAQkJ,KAAKrF,MAAM,EAAG,MAExBsQ,GACD,GAAE,IACJ,GAVO,EAWVG,YAAa,SAACtU,EAASuU,GAAV,OACX,IAAIL,SAAQ,SAACC,EAASC,GACpBC,YAAW,WACT,IAAMG,EAAU,aAAOZ,GAEvBY,EADcD,EAAQX,UAAU5U,IACZgB,EACpB6T,EAAa,aAAIW,IACjBlB,EAAkB,GAAD,oBACZD,GADY,CAEfrT,EAAQkJ,KAAKrF,MAAM,EAAG,GACtB0Q,EAAQrL,KAAKrF,MAAM,EAAG,MAExBsQ,GACD,GAAE,IACJ,GAdU,EAebM,YAAa,SAACF,GAAD,OACX,IAAIL,SAAQ,SAACC,EAASC,GACpBC,YAAW,WACT,IAAMK,EAAU,aAAOd,GACjBe,EAAQJ,EAAQX,UAAU5U,GAChC0V,EAAWE,OAAOD,EAAO,GACzBd,EAAa,aAAIa,IACjBpB,EAAkB,GAAD,oBACZD,GADY,CAEfkB,EAAQrL,KAAKrF,MAAM,EAAG,MAExBsQ,GACD,GAAE,IACJ,GAbU,OAkBtB,ECjGcU,GAlBH,WACV,OACE,cAAC,EAAD,UACE,eAAC,KAAD,WACE,cAAC,GAAD,IACA,cAAC,KAAD,UACE,sBAAKhQ,MAAO,CAAEgE,OAAQ,OAAtB,UACE,cAAC,KAAD,CAAOiM,OAAK,EAACC,KAAK,aAAaC,UAAWnF,KAC1C,cAAC,KAAD,CAAOiF,OAAK,EAACC,KAAK,mBAAmBC,UAAWxU,IAChD,cAAC,KAAD,CAAOsU,OAAK,EAACC,KAAK,oBAAoBC,UAAW/C,KACjD,cAAC,KAAD,CAAO6C,OAAK,EAACC,KAAK,kBAAkBC,UAAW5B,cAM1D,ECpBD6B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,Q","file":"static/js/main.d50150bd.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\n\nconst app = firebase.initializeApp({\n  apiKey: process.env.REACT_APP_FIREBASE_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_DOMAIN,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_SENDER_ID,\n});\nconst db = firebase.firestore();\n\nexport { app, db };\n","import dayjs from \"dayjs\";\n\nexport const sortedUniqueArray = ({ array, reverse = false }) => {\n  let arr = Array.from(new Set(array)).sort();\n  if (reverse) {\n    return arr.reverse();\n  }\n  return arr;\n};\n\nexport const allTimesBetween = ({\n  minTime,\n  maxTime,\n  timeFrame,\n  reverse = false,\n}) => {\n  let allTimes = [];\n  let time = minTime;\n  while (time <= maxTime) {\n    const t = time;\n    allTimes.push(t);\n    time = dayjs(t + (timeFrame === \"month\" ? \"-01\" : \"-01-01\"))\n      .add(1, timeFrame)\n      .format(timeFrame === \"month\" ? \"YYYY-MM\" : \"YYYY\");\n  }\n  if (reverse){\n    allTimes.reverse()\n  }\n  return allTimes;\n};\n","import firebase from \"firebase/app\";\nimport React, { useEffect, useState } from \"react\";\nimport { app, db } from \"../firebase\";\nimport dayjs from \"dayjs\";\nimport { sortedUniqueArray } from \"../utils/utils\";\n\nexport const AuthContext = React.createContext();\nconst monthFormat = \"YYYY-MM\";\n\nexport const AuthProvider = ({ children }) => {\n  const [minLoadMonth, setMinLoadMonth] = useState();\n  const [maxLoadMonth, setMaxLoadMonth] = useState();\n  const [allListenMonths, setAllListenMonths] = useState([]);\n  const [txData, setTxData] = useState();\n  const [settings, setSettings] = useState({});\n  const [currentUser, setCurrentUser] = useState();\n  const [loadingData, setLoadingData] = useState(true);\n  useEffect(() => {\n    app.auth().onAuthStateChanged((user) => {\n      if (!!user) {\n        setCurrentUser(user);\n        if (Object.keys(settings).length === 0) {\n          db.collection(\"settings\")\n            .where(firebase.firestore.FieldPath.documentId(), \"in\", [\n              \"categoryChanges\",\n              \"metaCategories\",\n              \"general\",\n            ])\n            .onSnapshot((query) => {\n              let newSettings = {};\n              for (let doc of query.docs) {\n                const k = doc.id;\n                const data = doc.data() || {};\n                newSettings[k] = data;\n              }\n              setSettings(newSettings);\n            });\n        }\n        if (!!settings.general) {\n          if (minLoadMonth !== settings.general.minMonth) {\n            setMinLoadMonth(\n              dayjs(settings.general.maxMonth)\n                .add(-11, \"month\")\n                .format(monthFormat)\n            );\n            setMaxLoadMonth(\n              dayjs(settings.general.maxMonth).format(monthFormat)\n            );\n          }\n          let month = dayjs(minLoadMonth + \"-01\").format(monthFormat);\n          let listenMonths = [];\n          while (month <= maxLoadMonth) {\n            const m = month;\n            if (!Object.keys(txData || {}).includes(m)) {\n              listenMonths.push(m);\n            }\n            month = dayjs(month + \"-01\")\n              .add(1, \"month\")\n              .format(monthFormat);\n          }\n          if (\n            listenMonths.filter((m) => !allListenMonths.includes(m)).length > 0\n          ) {\n            const newAllListenMonths = sortedUniqueArray({\n              array: allListenMonths.concat(listenMonths),\n            });\n            db.collection(\"months\")\n              .where(\n                firebase.firestore.FieldPath.documentId(),\n                \">=\",\n                newAllListenMonths[0]\n              )\n              .where(\n                firebase.firestore.FieldPath.documentId(),\n                \"<=\",\n                newAllListenMonths[newAllListenMonths.length - 1]\n              )\n              .onSnapshot((query) => {\n                setLoadingData(true);\n                let newData = {};\n                for (let doc of query.docs) {\n                  const m = doc.id;\n                  const data = doc.data() || {};\n                  let transactions = data.transactions || [];\n                  for (let tx of transactions) {\n                    if (\n                      Object.keys(tx).includes(\"comment\") &&\n                      !Object.keys(tx).includes(\"comments\")\n                    ) {\n                      tx.comments = tx.comment;\n                    }\n                  }\n                  newData[m] = transactions;\n                }\n                setTxData((d) => {\n                  return { ...d, ...newData };\n                });\n                setLoadingData(false);\n              });\n            setAllListenMonths(newAllListenMonths);\n          }\n        }\n      }\n    });\n  }, [minLoadMonth, maxLoadMonth, txData, settings, allListenMonths]);\n  return (\n    <AuthContext.Provider\n      value={{\n        currentUser,\n        txData,\n        setMinLoadMonth,\n        setCurrentUser,\n        settings,\n        minLoadMonth,\n        maxLoadMonth,\n        loadingData,\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nconst signOutFunc = () => {\n  const confirmed = window.confirm(\"Are you sure you want to sign out?\");\n  if (!confirmed) {\n    return;\n  }\n  app.auth().signOut();\n};\n\nexport { signOutFunc };\n","import firebase from \"firebase/app\";\nimport { useContext } from \"react\";\nimport { AuthContext } from \"./Auth\";\n\nconst Login = ({ history }) => {\n  const { currentUser } = useContext(AuthContext);\n  if (!!currentUser) {\n    history.push(\"/fin-trans\");\n  }\n  const auth = firebase.auth();\n  const googleProvider = new firebase.auth.GoogleAuthProvider();\n  const signInWithGoogle = () => {\n    auth\n      .signInWithPopup(googleProvider)\n      .then((res) => {\n        history.push(\"/fin-trans\");\n      })\n      .catch((error) => {\n        console.log(error.message);\n      });\n  };\n  return (\n    <button className=\"login-provider-button\" onClick={signInWithGoogle}>\n      <span>Sign in with Google</span>\n    </button>\n  );\n};\n\nexport default Login;\n","import { forwardRef } from \"react\";\n\nimport AddBox from \"@material-ui/icons/AddBox\";\nimport ArrowDownward from \"@material-ui/icons/ArrowDownward\";\nimport Check from \"@material-ui/icons/Check\";\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\nimport Clear from \"@material-ui/icons/Clear\";\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\nimport Edit from \"@material-ui/icons/Edit\";\nimport FilterList from \"@material-ui/icons/FilterList\";\nimport FirstPage from \"@material-ui/icons/FirstPage\";\nimport LastPage from \"@material-ui/icons/LastPage\";\nimport Remove from \"@material-ui/icons/Remove\";\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\nimport Search from \"@material-ui/icons/Search\";\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\n\nconst tableIcons = {\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n  DetailPanel: forwardRef((props, ref) => (\n    <ChevronRight {...props} ref={ref} />\n  )),\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n  PreviousPage: forwardRef((props, ref) => (\n    <ChevronLeft {...props} ref={ref} />\n  )),\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n  SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\n};\n\nexport default tableIcons;\n","import MaterialTable from \"material-table\";\nimport React from \"react\";\nimport tableIcons from \"./tableIcons\";\n\nconst Table = ({ transactions, filterValues = {} }) => {\n  const columns = [\n    { title: \"Date\", field: \"date\", defaultSort: \"desc\" },\n    { title: \"Amount\", field: \"amount\", type: \"currency\" },\n    { title: \"Category\", field: \"category\" },\n    { title: \"Meta Category\", field: \"metaCategory\" },\n    { title: \"Account\", field: \"account\" },\n    { title: \"Tags\", field: \"tags\" },\n    { title: \"Description\", field: \"description\" },\n    { title: \"Comments\", field: \"comments\" },\n  ];\n  for (let col of columns) {\n    if (Object.keys(filterValues).includes(col.field)) {\n      col.defaultFilter = filterValues[col.field];\n    }\n  }\n  return (\n    <div>\n      <MaterialTable\n        title={\"Transactions\"}\n        data={transactions}\n        columns={columns}\n        icons={tableIcons}\n        options={{ filtering: true }}\n      />\n    </div>\n  );\n};\n\nexport default Table;\n","import dayjs from \"dayjs\";\nimport color from \"color\";\nimport { sortedUniqueArray } from \"../utils/utils\";\n\nexport const getGroupedData = ({ allTx, groupOn, includeAll }) => {\n  const [thisGroupOn, nextGroupOn] = Array.isArray(groupOn)\n    ? [groupOn[0], groupOn.slice(1)]\n    : [groupOn, []];\n  const [thisIncludeAll, nextIncludeAll] = Array.isArray(includeAll)\n    ? [includeAll[0], includeAll.slice(1)]\n    : [includeAll, []];\n  const allGroups = sortedUniqueArray({\n    array: allTx.map((x) => x[thisGroupOn]),\n  });\n  let groupedData = {};\n  for (const group of allGroups) {\n    groupedData[group] = [];\n  }\n  for (const tx of allTx) {\n    groupedData[tx[thisGroupOn]].push(tx);\n  }\n  if (thisIncludeAll) {\n    groupedData[\"_all\"] = allTx;\n  }\n  if (nextGroupOn.length > 0) {\n    for (const group of Object.keys(groupedData)) {\n      groupedData[group] = getGroupedData({\n        allTx: groupedData[group],\n        groupOn: nextGroupOn,\n        includeAll: nextIncludeAll,\n      });\n    }\n  }\n  return groupedData;\n};\n\nexport const incrementTime = ({ timeFrame, time }) => {\n  return timeFrame === \"month\"\n    ? dayjs(time + \"-01\")\n        .add(1, \"month\")\n        .format(\"YYYY-MM\")\n    : dayjs(time + \"-01-01\")\n        .add(1, \"year\")\n        .format(\"YYYY\");\n};\n\nexport const currencyFormat = (x) => {\n  var formatter = new Intl.NumberFormat(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\",\n  });\n  return formatter.format(x);\n};\n\nexport const dateFormat = ({ d, timeFrame }) => {\n  return timeFrame === \"month\" ? dayjs(d + \"-01\").format(\"MMM YYYY\") : d;\n};\n\nexport const dateFormatInv = ({ d, timeFrame }) => {\n  return timeFrame === \"month\" ? dayjs(\"1 \" + d).format(\"YYYY-MM\") : d;\n};\n\nexport const plotColors = [\n  \"#1f77b4\",\n  \"#ff7f0e\",\n  \"#2ca02c\",\n  \"#d62728\",\n  \"#9467bd\",\n  \"#8c564b\",\n  \"#e377c2\",\n  \"#7f7f7f\",\n  \"#bcbd22\",\n  \"#17becf\",\n];\n\nexport const addColors = (traces) => {\n  let i = 0;\n  for (const trace of traces) {\n    trace.line = trace.line || {};\n    let shading = 0;\n    if (trace._isAvg) {\n      i -= 1;\n      shading = 0.5;\n    }\n    const c = color(plotColors[i % plotColors.length]);\n    trace.line.color = c.fade(shading).rgb().string();\n    i += 1;\n  }\n  return traces;\n};\n","import Plot from \"react-plotly.js\";\nimport { sortedUniqueArray } from \"../utils/utils.js\";\nimport { currencyFormat, dateFormat, getGroupedData } from \"./utils.js\";\n\nexport const SinglePeriodPlot = ({\n  plotTx,\n  metaCategory,\n  timeFrame,\n  time,\n  txType,\n  setTableFilters\n}) => {\n  const groupOn = metaCategory === \"_all\" ? \"metaCategory\" : \"category\";\n  const groupedData = getGroupedData({\n    allTx: plotTx,\n    groupOn: [groupOn],\n    includeAll: [false],\n  });\n  const plotData = getPlotData({ groupedData: groupedData });\n  const plotLayout = getPlotLayout({\n    timeFrame: timeFrame,\n    time: time,\n    txType: txType,\n    metaCategory: metaCategory,\n  });\n  return (\n    <Plot\n      layout={plotLayout}\n      data={plotData}\n      useResizeHandler={true}\n      style={{ width: \"100%\", height: \"100%\" }}\n      onClick={(e) => {\n        let filters = {}\n        filters[groupOn] = e.points[0].x;\n        setTableFilters(filters);\n      }}\n    />\n  );\n};\n\nconst getPlotData = ({ groupedData }) => {\n  let plotData = {\n    type: \"bar\",\n    hoverinfo: \"text\",\n    x: [],\n    y: [],\n    text: [],\n  };\n  for (const cat of sortedUniqueArray({ array: Object.keys(groupedData) })) {\n    const data = groupedData[cat];\n    const y = data.map((d) => d.amount).reduce((a, b) => a + b, 0);\n    plotData.x.push(cat);\n    plotData.y.push(y);\n    plotData.text.push(`${cat}<br>${currencyFormat(y)}`);\n  }\n  return [plotData];\n};\n\nconst getPlotLayout = ({ timeFrame, time, txType, metaCategory }) => {\n  const title = `${metaCategory === '_all' ? 'All' : metaCategory} ${\n    txType === \"expense\" ? \"Expenses\" : \"Income\"\n  } - ${dateFormat({ d: time, timeFrame: timeFrame })}`;\n  return {\n    title: title,\n    autosize: true,\n    hovermode: \"closest\",\n  };\n};\n\nexport default SinglePeriodPlot;\n","import { useState } from \"react\";\nimport Plot from \"react-plotly.js\";\nimport {\n  getGroupedData,\n  dateFormat,\n  dateFormatInv,\n  currencyFormat,\n  incrementTime,\n  addColors,\n} from \"./utils\";\n\nconst TrendPlot = ({\n  plotTx,\n  txType,\n  metaCategory,\n  timeFrame,\n  minTime,\n  maxTime,\n  setTableFilters,\n}) => {\n  const [includeAverages, setIncludeAverages] = useState(true);\n  const groupOn = metaCategory === \"_all\" ? \"metaCategory\" : \"category\";\n  const groupedData = getGroupedData({\n    allTx: plotTx,\n    groupOn: [groupOn, timeFrame],\n    includeAll: [true, false],\n  });\n  const plotData = getPlotData({\n    groupedData: groupedData,\n    groupOn: groupOn,\n    timeFrame: timeFrame,\n    minTime: minTime,\n    maxTime: maxTime,\n    includeAverages: includeAverages,\n  });\n  const plotLayout = getPlotLayout({\n    timeFrame: timeFrame,\n    minTime: minTime,\n    maxTime: maxTime,\n    txType: txType,\n    metaCategory: metaCategory,\n  });\n  return (\n    <>\n      <IncludeAvgCheckbox includeAverages={includeAverages} setIncludeAverages={setIncludeAverages} />\n      <Plot\n        layout={plotLayout}\n        data={plotData}\n        useResizeHandler={true}\n        style={{ width: \"100%\", height: \"100%\" }}\n        onClick={(e) => {\n          const data = e.points[0].data;\n          if (data._isAvg) {\n            return;\n          }\n          let filters = {\n            date: dateFormatInv({ d: e.points[0].x, timeFrame: timeFrame }),\n          };\n          if (data._cat !== \"_all\") {\n            filters[groupOn] = data._cat;\n          }\n          setTableFilters(filters);\n        }}\n      />\n    </>\n  );\n};\n\nconst getPlotLayout = ({\n  timeFrame,\n  minTime,\n  maxTime,\n  txType,\n  metaCategory,\n}) => {\n  const title = `${timeFrame === \"month\" ? \"Month\" : \"Year\"}ly Trends - ${\n    txType === \"expense\" ? \"Expenses\" : \"Income\"\n  }${metaCategory === \"_all\" ? \"\" : \" - \" + metaCategory}`;\n  const subTitle = `${dateFormat({\n    d: minTime,\n    timeFrame: timeFrame,\n  })} - ${dateFormat({ d: maxTime, timeFrame: timeFrame })}`;\n  return {\n    title: `${title}<br><sub>${subTitle}</sub>`,\n    autosize: true,\n    hovermode: \"closest\",\n  };\n};\n\nconst getPlotData = ({\n  groupedData,\n  groupOn,\n  timeFrame,\n  minTime,\n  maxTime,\n  includeAverages,\n}) => {\n  let plotData = [];\n  for (const [cat, catData] of Object.entries(groupedData)) {\n    let time = minTime;\n    let x = [];\n    let y = [];\n    let text = [];\n    const catName = cat === \"_all\" ? \"Total\" : cat;\n    while (time <= maxTime) {\n      x.push(dateFormat({ d: time, timeFrame: timeFrame }));\n      let yVal = 0;\n      for (const tx of catData[time] || []) {\n        yVal += tx.amount;\n      }\n      y.push(yVal);\n      text.push(\n        `${catName}<br>${dateFormat({\n          d: time,\n          timeFrame: timeFrame,\n        })}<br>${currencyFormat(yVal)}`\n      );\n      time = incrementTime({ timeFrame: timeFrame, time: time });\n    }\n    const totalY = y.reduce((a, b) => a + b, 0);\n    const newData = {\n      _cat: cat,\n      _groupOn: groupOn,\n      name: `${catName} - ${currencyFormat(totalY)}`,\n      legendgroup: cat,\n      type: \"scatter\",\n      hoverinfo: \"text\",\n      text: text,\n      x: x,\n      y: y,\n    };\n    plotData.push(newData);\n    if (includeAverages) {\n      const avgY = totalY / newData.y.length;\n      const avgData = {\n        ...newData,\n        ...{\n          _cat: newData._cat + \"_avg\",\n          _isAvg: true,\n          line: {dash: 'dash'},\n          showlegend: false,\n          text: `Avg. ${catName}<br>${currencyFormat(avgY)}`,\n          y: newData.y.map((y) => avgY),\n        },\n      };\n      plotData.push(avgData);\n    }\n  }\n  plotData = plotData.sort((a, b) => {\n    [a, b] = [a, b].map((x) => x._cat.replace(\"_\", \"A\".repeat(10)));\n    return a < b ? -1 : 1;\n  });\n  plotData = addColors(plotData);\n  return plotData;\n};\n\nconst IncludeAvgCheckbox = ({ includeAverages, setIncludeAverages }) => {\n  return (\n    <div style={{ margin: \"5pt 10pt\" }}>\n      {`Include Avg. `}\n      <input\n        type=\"checkbox\"\n        checked={includeAverages}\n        onChange={(e) => setIncludeAverages(e.target.checked)}\n      />\n    </div>\n  );\n};\n\nexport default TrendPlot;\n","import React from \"react\";\nimport SinglePeriodPlot from \"./SinglePeriodPlot\";\nimport TrendPlot from \"./TrendPlot\";\n\nconst Plot = ({ plotTx, selectionValues, setTableFilters }) => {\n  return (\n    <div style={{ height: \"550px\" }}>\n      {selectionValues.plotType === \"trend\" ? (\n        <TrendPlot\n          plotTx={plotTx}\n          txType={selectionValues.txType}\n          metaCategory={selectionValues.metaCategory}\n          timeFrame={selectionValues.timeFrame}\n          minTime={selectionValues.minTime}\n          maxTime={selectionValues.maxTime}\n          setTableFilters={setTableFilters}\n        />\n      ) : (\n        <SinglePeriodPlot\n          plotTx={plotTx}\n          txType={selectionValues.txType}\n          metaCategory={selectionValues.metaCategory}\n          timeFrame={selectionValues.timeFrame}\n          time={selectionValues.maxTime}\n          setTableFilters={setTableFilters}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Plot;\n","export const getDropdownArgs = ({\n  settings,\n  allMetaCats,\n  selectionValues,\n  allTimes,\n}) => {\n  const dropdownArgs = [\n    [\n      {\n        label: \"Category Grouping\",\n        options: Object.keys(settings.metaCategories).filter(\n          (mc) => mc !== \"_default\"\n        ),\n        selectionKey: \"metaCatVersion\",\n      },\n      {\n        label: \"Category Changes\",\n        options: Object.keys(settings.categoryChanges).filter(\n          (mc) => mc !== \"_default\"\n        ),\n        selectionKey: \"categoryChangeVersion\",\n      },\n    ],\n    [\n      {\n        label: \"Transaction Type\",\n        options: [{ value: \"expense\", label: \"Expense\" }],\n        selectionKey: \"txType\",\n      },\n      {\n        label: \"Plot Type\",\n        options: [\n          { value: \"trend\", label: \"Trend\" },\n          { value: \"singlePeriod\", label: \"Single Period\" },\n        ],\n        selectionKey: \"plotType\",\n      },\n      {\n        label: \"Meta Category\",\n        options: allMetaCats,\n        selectionKey: \"metaCategory\",\n      },\n    ],\n    [\n      {\n        label: \"Time Frame\",\n        options: [\n          { value: \"month\", label: \"Month\" },\n          { value: \"year\", label: \"Year\" },\n        ],\n        selectionKey: \"timeFrame\",\n      },\n    ],\n  ];\n  const lastInd = dropdownArgs.length - 1;\n  if (selectionValues.plotType === \"trend\") {\n    dropdownArgs[lastInd] = dropdownArgs[lastInd].concat([\n      {\n        label: `Start ${\n          selectionValues.timeFrame === \"month\" ? \"Month\" : \"Year\"\n        }`,\n        options: allTimes,\n        selectionKey: \"minTime\",\n      },\n      {\n        label: `End ${\n          selectionValues.timeFrame === \"month\" ? \"Month\" : \"Year\"\n        }`,\n        options: allTimes,\n        selectionKey: \"maxTime\",\n      },\n    ]);\n  } else {\n    dropdownArgs[lastInd] = dropdownArgs[lastInd].concat([\n      {\n        label: selectionValues.timeFrame === \"month\" ? \"Month\" : \"Year\",\n        options: allTimes,\n        selectionKey: \"maxTime\",\n      },\n    ]);\n  }\n  return dropdownArgs;\n};\n\nexport const sanitize = (s) => {\n  return s.replace(\"-\", \"\").replace(\"/\", \"\").replace(\" \", \"\");\n};\n","import React, { useState } from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Select from \"react-select\";\nimport { sanitize } from \"./utils\";\nimport { sortedUniqueArray } from \"../utils/utils\";\n\nconst CategoryModal = ({\n  show,\n  setShow,\n  metaCategories,\n  selectionValues,\n  setSelectionValues,\n}) => {\n  const options = getOptions(metaCategories);\n  const [selectedOption, setSelectedOption] = useState(options[0]);\n  const [disabledMetaCategories, setDisabledMetaCategories] = useState([]);\n  const [checkChanged, setCheckChanged] = useState({\n    metaCats: {},\n    cats: {},\n  });\n  const selS = selectedOption.originalValue;\n  const handleClose = () => {\n    setCheckChanged({ metaCats: {}, cats: {} });\n    setShow(false);\n  };\n  return (\n    <div>\n      <Modal show={show}>\n        <Modal.Header>\n          <h3>Category Detail</h3>\n        </Modal.Header>\n        <Modal.Body>\n          Select a meta-category\n          <Select\n            options={options}\n            defaultValue={selectedOption}\n            onChange={(opt) => setSelectedOption(opt)}\n          ></Select>\n          {Object.keys(metaCategories).map((mc) => {\n            return (\n              <MetaCatCheckBoxes\n                metaCat={mc}\n                metaCategories={metaCategories}\n                checkChanged={checkChanged}\n                setCheckChanged={setCheckChanged}\n                selectionValues={selectionValues}\n                disabledMetaCategories={disabledMetaCategories}\n                setDisabledMetaCategories={setDisabledMetaCategories}\n                show={mc === selS}\n              />\n            );\n          })}\n        </Modal.Body>\n        <Modal.Footer>\n          <button\n            onClick={() => {\n              setSelectionValues((v) => {\n                let imc = v.inactiveMetaCategories;\n                for (const mc of Object.keys(checkChanged.metaCats)) {\n                  if (checkChanged.metaCats[mc]) {\n                    if (imc.includes(mc)) {\n                      imc = imc.filter((x) => x !== mc);\n                    } else {\n                      imc.push(mc);\n                    }\n                  }\n                }\n                let ic = v.inactiveCategories;\n                for (const c of Object.keys(checkChanged.cats)) {\n                  if (checkChanged.cats[c]) {\n                    if (ic.includes(c)) {\n                      ic = ic.filter((x) => x !== c);\n                    } else {\n                      ic.push(c);\n                    }\n                  }\n                }\n                return {\n                  ...v,\n                  ...{ inactiveMetaCategories: imc, inactiveCategories: ic },\n                };\n              });\n              handleClose();\n            }}\n          >\n            Save\n          </button>\n          <button onClick={() => handleClose()}>Cancel</button>\n        </Modal.Footer>\n      </Modal>\n    </div>\n  );\n};\n\nconst MetaCatCheckBoxes = ({\n  show,\n  metaCat,\n  metaCategories,\n  checkChanged,\n  setCheckChanged,\n  selectionValues,\n  disabledMetaCategories,\n  setDisabledMetaCategories,\n}) => {\n  return (\n    <div\n      style={{ ...{ marginTop: \"5pt\" }, ...(show ? {} : { display: \"none\" }) }}\n    >\n      <input\n        type=\"checkbox\"\n        id={getMetaCatId(metaCat)}\n        defaultChecked={\n          !selectionValues.inactiveMetaCategories.includes(metaCat)\n        }\n        onChange={(e) => {\n          changeCheckChanged({\n            catOrMetaCat: \"metaCats\",\n            key: metaCat,\n            setCheckChanged: setCheckChanged,\n          });\n        }}\n      />\n      <label for={getMetaCatId(metaCat)}>&nbsp;&nbsp;{metaCat}</label>\n      <div style={{ marginLeft: \"5pt\" }}>\n        {metaCategories[metaCat].map((x) => {\n          return (\n            <div>\n              <input\n                id={getCatId(x)}\n                type=\"checkbox\"\n                defaultChecked={!selectionValues.inactiveCategories.includes(x)}\n                disabled={\n                  (selectionValues.inactiveMetaCategories.includes(metaCat) &&\n                    !checkChanged.metaCats[metaCat]) ||\n                  (!selectionValues.inactiveMetaCategories.includes(metaCat) &&\n                    !!checkChanged.metaCats[metaCat])\n                }\n                onChange={() =>\n                  changeCheckChanged({\n                    catOrMetaCat: \"cats\",\n                    key: x,\n                    setCheckChanged: setCheckChanged,\n                  })\n                }\n              />\n              <label for={getCatId(x)}>&nbsp;&nbsp;{x}</label>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nconst changeCheckChanged = ({ catOrMetaCat, key, setCheckChanged }) => {\n  const other = catOrMetaCat === \"cats\" ? \"metaCats\" : \"cats\";\n  setCheckChanged((v) => {\n    let thisObj = v[catOrMetaCat];\n    const otherObj = v[other];\n    thisObj[key] = !thisObj[key];\n    let obj = {};\n    obj[catOrMetaCat] = thisObj;\n    obj[other] = otherObj;\n    return obj;\n  });\n};\n\nconst getOptions = (metaCategories) => {\n  return sortedUniqueArray({ array: Object.keys(metaCategories) }).map((c) => {\n    return {\n      originalValue: c,\n      value: sanitize(c),\n      label: c,\n    };\n  });\n};\n\nconst getMetaCatId = (mc) => {\n  return `${sanitize(mc)}MetaCatSel`;\n};\n\nconst getCatId = (c) => {\n  return `${sanitize(c)}CatSel`;\n};\n\nexport default CategoryModal;\n","import React, { useState } from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nconst TagModal = ({show, setShow, selectionValues, setSelectionValues, allTags}) => {\n    const originalStatuses = {}\n    for (const tag of allTags){\n        originalStatuses[tag] = selectionValues.requiredTags.includes(tag) ? 'must' : (\n            selectionValues.forbiddenTags.includes(tag) ? 'cannot' : 'can'\n        )\n    }\n    const [statuses, setStatuses] = useState(originalStatuses)\n    const handleClose = (statusesToSet) => {\n        setSelectionValues(v => {\n            let newObj = {\n                requiredTags: Object.keys(statusesToSet).filter(t => statusesToSet[t] === 'must'),\n                forbiddenTags: Object.keys(statusesToSet).filter(t => statusesToSet[t] === 'cannot')\n            }\n            return {...v, ...newObj}\n        })\n        setShow(false)\n    }\n    return (\n        <div>\n      <Modal show={show}>\n        <Modal.Header>\n          <h3>Tag Detail</h3>\n        </Modal.Header>\n        <Modal.Body>\n            <table>\n                <thead>\n                    <tr>\n                    <td></td>\n                    {['Can Have', 'Must Have', \"Can't Have\"].map(s => {\n                        return <td style={{textAlign: 'center', padding: '5pt'}}>{s}</td>\n                    })}\n                    </tr>\n                </thead>\n                <tbody>\n                    {allTags.map(tag => {\n                        return(\n                            <tr>\n                                <td>{tag}</td>\n                                {['can', 'must', 'cannot'].map(v => {\n                                    const checked = (statuses[tag] || 'can') === v\n                                    return(<td style={{textAlign: 'center'}}>\n                                        <input type='radio' name={tag} value={v} defaultChecked={checked} onChange={(e) => {\n                                            setStatuses(s => {\n                                                let newObj = {}\n                                                newObj[e.target.name] = e.target.value;\n                                                return {...s, ...newObj}\n                                            })\n                                        }}/>\n                                    </td>)\n                                })}\n                            </tr>\n                        )\n                    })}\n                </tbody>\n            </table>\n        </Modal.Body>\n        <Modal.Footer>\n          <button\n            onClick={() => handleClose(statuses)}\n          >\n            Save\n          </button>\n          <button onClick={() => handleClose(originalStatuses)}>Cancel</button>\n        </Modal.Footer>\n      </Modal>\n    </div>\n    )\n}\n\nexport default TagModal\n","import React, { useContext, useState } from \"react\";\nimport Select from \"react-select\";\nimport { AuthContext } from \"../auth/Auth\";\nimport CategoryModal from \"./CategoryModal\";\nimport TagModal from \"./TagModal\";\nimport { getDropdownArgs, sanitize } from \"./utils\";\n\nconst Selections = ({\n  selectionValues,\n  setSelectionValues,\n  allMetaCats,\n  allTimes,\n  metaCategories,\n  allTags,\n}) => {\n  const { settings, minLoadMonth, setMinLoadMonth } = useContext(AuthContext);\n  const [showCategoryModal, setShowCategoryModal] = useState(false);\n  const [showTagModal, setShowTagModal] = useState(false);\n  allMetaCats = [{ value: \"_all\", label: \"All\" }].concat(allMetaCats);\n  const dropdownArgs = getDropdownArgs({\n    settings: settings,\n    allMetaCats: allMetaCats,\n    selectionValues: selectionValues,\n    allTimes: allTimes,\n  });\n  const content = dropdownArgs.map((selGroup) => {\n    const selGroupContent = selGroup.map((sel) => {\n      return (\n        <DropdownFromList\n          key={sel.selectionKey}\n          selectionValues={selectionValues}\n          setSelectionValues={setSelectionValues}\n          minLoadMonth={minLoadMonth}\n          setMinLoadMonth={setMinLoadMonth}\n          {...sel}\n        />\n      );\n    });\n    return (\n      <div\n        style={{ display: \"flex\", marginTop: \"5pt\" }}\n        key={selGroup[0].selectionKey}\n      >\n        {selGroupContent}\n      </div>\n    );\n  });\n  content.push(\n    <div style={{ margin: \"10pt\" }}>\n      <button\n        onClick={() => setShowCategoryModal(true)}\n        style={{ marginRight: \"5pt\" }}\n      >\n        Category Detail\n      </button>\n      <button onClick={() => setShowTagModal(true)}>Tag Detail</button>\n      <CategoryModal\n        show={showCategoryModal}\n        setShow={setShowCategoryModal}\n        selectionValues={selectionValues}\n        setSelectionValues={setSelectionValues}\n        metaCategories={metaCategories}\n      />\n      <TagModal\n        show={showTagModal}\n        setShow={setShowTagModal}\n        selectionValues={selectionValues}\n        setSelectionValues={setSelectionValues}\n        allTags={allTags}\n      />\n    </div>\n  );\n  content.push(\n    <>\n      <input\n        type=\"checkbox\"\n        id={\"selectAmortizeCheckbox\"}\n        defaultChecked={selectionValues.amortize}\n        onChange={() => {\n          changeSelectionValue({\n            key: \"amortize\",\n            val: !selectionValues.amortize,\n            setValueFunc: setSelectionValues,\n          });\n        }}\n      />\n      <label for={\"selectAmortizeCheckbox\"}>&nbsp;&nbsp;Use Amortization</label>\n    </>\n  );\n  content.push(<hr />);\n  return <>{content}</>;\n};\n\nconst DropdownFromList = ({\n  label,\n  options,\n  selectionKey,\n  selectionValues,\n  setSelectionValues,\n  minLoadMonth,\n  setMinLoadMonth,\n}) => {\n  options = options\n    .map((opt) => {\n      return typeof opt === \"string\" ? (opt = { value: opt, label: opt }) : opt;\n    })\n    .map((opt) => {\n      return {\n        originalValue: opt.value,\n        value: sanitize(opt.value),\n        label: opt.label,\n      };\n    });\n  let defaultValue = options.filter(\n    (opt) => opt.originalValue === selectionValues[selectionKey]\n  );\n  const onChange = (e) => {\n    const value = e.originalValue;\n    changeSelectionValue({\n      key: selectionKey,\n      val: value,\n      setValueFunc: setSelectionValues,\n    });\n    if (selectionKey === \"timeFrame\") {\n      if (selectionValues.plotType === \"trend\") {\n        if (value === \"year\") {\n          const newMinTime = selectionValues.minTime.slice(0, 4);\n          changeSelectionValue({\n            key: \"minTime\",\n            val: newMinTime,\n            setValueFunc: setSelectionValues,\n          });\n          changeSelectionValue({\n            key: \"maxTime\",\n            val: selectionValues.maxTime.slice(0, 4),\n            setValueFunc: setSelectionValues,\n          });\n          if (newMinTime + \"-01\" < minLoadMonth) {\n            setMinLoadMonth(newMinTime + \"-01\");\n          }\n        } else {\n          changeSelectionValue({\n            key: \"minTime\",\n            val: selectionValues.minTime + \"-01\",\n            setValueFunc: setSelectionValues,\n          });\n          changeSelectionValue({\n            key: \"maxTime\",\n            val: selectionValues.maxTime + \"-12\",\n            setValueFunc: setSelectionValues,\n          });\n        }\n      } else {\n        if (value === \"year\") {\n          const newTime = selectionValues.maxTime.slice(0, 4);\n          changeSelectionValue({\n            key: \"maxTime\",\n            val: newTime,\n            setValueFunc: setSelectionValues,\n          });\n          if (newTime + \"-01\" < minLoadMonth) {\n            setMinLoadMonth(newTime + \"-01\");\n          }\n        } else {\n          changeSelectionValue({\n            key: \"maxTime\",\n            val: selectionValues.maxTime + \"-01\",\n            setValueFunc: setSelectionValues,\n          });\n        }\n      }\n    }\n  };\n  return (\n    <div style={{ width: \"100pt\", marginLeft: \"10pt\" }}>\n      {label}\n      <Select options={options} value={defaultValue} onChange={onChange} />\n    </div>\n  );\n};\n\nconst changeSelectionValue = ({ key, val, setValueFunc }) => {\n  setValueFunc((v) => {\n    let newValue = {};\n    newValue[key] = val;\n    return { ...v, ...newValue };\n  });\n};\n\nexport default Selections;\n","import dayjs from \"dayjs\";\n\nconst transformTransactions = ({\n  transactions,\n  metaCategories,\n  categoryChanges,\n}) => {\n  const categoriesToChange = Object.keys(categoryChanges || {});\n  let metaCatInverse = {};\n  for (const mc of Object.keys(metaCategories || {})) {\n    for (const c of metaCategories[mc]) {\n      metaCatInverse[c] = mc;\n    }\n  }\n  let amortizeTx = [];\n  for (let tx of transactions) {\n    if (categoriesToChange.includes(tx.category)) {\n      tx.category = categoryChanges[tx.category];\n    }\n    tx.metaCategory = metaCatInverse[tx.category] || \"Misc\";\n    tx.type = tx.amount < 0 ? \"expense\" : \"income\";\n    tx.tags = tx.tags || [];\n    if (typeof tx.tags === \"string\") {\n      tx.tags = tx.tags.split(\",\").map(x => x.toLowerCase().trim());\n    }\n    tx.tags = tx.tags.filter((t) => t.trim() !== \"\");\n    tx.month = dayjs(tx.date).format(\"YYYY-MM\");\n    tx.year = dayjs(tx.date).format(\"YYYY\");\n    if (!!tx.amortize) {\n      tx.amortize = parseInt(tx.amortize);\n      tx.skipIfAmortize = true\n      for (let i=0; i<tx.amortize; i++){\n        const newVals = {\n          date: dayjs(tx.date).add(i, 'month').format(\"YYYY-MM-DD\"),\n          amount: tx.amount / tx.amortize,\n          skipIfAmortize: false,\n          skipIfNoAmortize: true\n        }\n        newVals.month = dayjs(newVals.date).format(\"YYYY-MM\");\n        newVals.year = dayjs(newVals.date).format(\"YYYY\");\n        amortizeTx.push({...tx, ...newVals})\n      }\n    }\n  }\n  return transactions.concat(amortizeTx)\n    .filter((tx) => tx.metaCategory !== \"Ignore\")\n    .map((tx) => {\n      return { ...tx, ...{ amount: Math.abs(tx.amount) } };\n    });\n};\n\nexport default transformTransactions;\n","import { useContext, useState, useEffect } from \"react\";\nimport { AuthContext, signOutFunc } from \"./auth/Auth\";\nimport { Accordion } from \"react-bootstrap\";\nimport Table from \"./table/Table\";\nimport Plot from \"./plot/Plot\";\nimport Selections from \"./selections/Selections\";\nimport transformTransactions from \"./utils/transactions\";\nimport { sortedUniqueArray, allTimesBetween } from \"./utils/utils\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nconst Home = ({ history }) => {\n  const {\n    currentUser,\n    setCurrentUser,\n    txData,\n    settings,\n    minLoadMonth,\n    maxLoadMonth,\n    setMinLoadMonth,\n    loadingData,\n  } = useContext(AuthContext);\n  const [selectionValues, setSelectionValues] = useState({\n    metaCatVersion: undefined,\n    categoryChangeVersion: undefined,\n    txType: \"expense\",\n    inactiveCategories: [],\n    inactiveMetaCategories: [],\n    requiredTags: [],\n    forbiddenTags: [],\n    plotType: \"trend\",\n    metaCategory: \"_all\",\n    timeFrame: \"month\",\n    minTime: undefined,\n    maxTime: undefined,\n    amortize: false,\n  });\n  const [tableFilters, setTableFilters] = useState({});\n  const [waitForLoad, setWaitForLoad] = useState(loadingData);\n  useEffect(() => {\n    setWaitForLoad(loadingData);\n  }, [loadingData]);\n  useEffect(() => {\n    if (!!selectionValues.minTime) {\n      setMinLoadMonth((m) => {\n        const newTime =\n          selectionValues.minTime.length === 4\n            ? selectionValues.minTime + \"-01\"\n            : selectionValues.minTime;\n        return newTime < m ? newTime : m;\n      });\n    }\n  }, [selectionValues.minTime, setMinLoadMonth]);\n  useEffect(() => {\n    if (!!settings && !!minLoadMonth && !!maxLoadMonth) {\n      setSelectionValues((v) => {\n        let newObj = {};\n        if (!!!v.metaCatVersion) {\n          newObj.metaCatVersion = (settings.metaCategories || {})._default;\n        }\n        if (!!!v.categoryChanges) {\n          newObj.categoryChangeVersion = (\n            settings.categoryChanges || {}\n          )._default;\n        }\n        if (!!!v.minTime) {\n          newObj.minTime = minLoadMonth;\n        }\n        if (!!!v.maxTime) {\n          newObj.maxTime = maxLoadMonth;\n        }\n        return { ...v, ...newObj };\n      });\n    }\n  }, [settings, minLoadMonth, maxLoadMonth]);\n  let allTx = [];\n  for (const k of Object.keys(txData || {})) {\n    allTx = allTx.concat(\n      transformTransactions({\n        transactions: txData[k],\n        metaCategories: settings.metaCategories[selectionValues.metaCatVersion],\n        categoryChanges:\n          settings.categoryChanges[selectionValues.categoryChangeVersion],\n      })\n    );\n  }\n  if (!!!currentUser) {\n    history.push(\"/fin-trans/login\");\n  }\n  if (\n    !!!settings ||\n    !!!selectionValues.metaCatVersion ||\n    !!!selectionValues.categoryChangeVersion\n  ) {\n    return <div>Loading...</div>;\n  }\n  let allTags = [];\n  for (const tx of allTx) {\n    allTags = allTags.concat(tx.tags || []);\n  }\n  allTags = sortedUniqueArray({ array: allTags });\n  allTx = allTx.filter((tx) => {\n    return (\n      tx[selectionValues.timeFrame] >= selectionValues.minTime &&\n      tx[selectionValues.timeFrame] <= selectionValues.maxTime &&\n      tx.type === selectionValues.txType &&\n      !selectionValues.inactiveCategories.includes(tx.category) &&\n      !selectionValues.inactiveMetaCategories.includes(tx.metaCategory) &&\n      (tx.tags || [])\n        .map((tag) => {\n          return selectionValues.requiredTags.includes(tag) ? 1 : 0;\n        })\n        .reduce((a, b) => a + b, 0) === selectionValues.requiredTags.length &&\n      (tx.tags || [])\n        .map((tag) => {\n          return selectionValues.forbiddenTags.includes(tag) ? 1 : 0;\n        })\n        .reduce((a, b) => a + b, 0) === 0 &&\n      (selectionValues.amortize ? !tx.skipIfAmortize : !tx.skipIfNoAmortize)\n    );\n  });\n  allTx = allTx.filter((tx) => {\n    return selectionValues.plotType === \"trend\"\n      ? tx[selectionValues.timeFrame] >= selectionValues.minTime &&\n          tx[selectionValues.timeFrame] <= selectionValues.maxTime\n      : tx[selectionValues.timeFrame] === selectionValues.maxTime;\n  });\n  const allMetaCats = sortedUniqueArray({\n    array: allTx.map((tx) => tx.metaCategory),\n  });\n  allTx = allTx.filter((tx) => {\n    return selectionValues.metaCategory === \"_all\"\n      ? true\n      : tx.metaCategory === selectionValues.metaCategory;\n  });\n  const allTimes = allTimesBetween({\n    minTime: settings.general.minMonth,\n    maxTime: settings.general.maxMonth,\n    timeFrame: selectionValues.timeFrame,\n    reverse: true,\n  });\n  return (\n    <>\n      <button\n        onClick={() => {\n          signOutFunc();\n          setCurrentUser();\n          history.push(\"/fin-trans/login\");\n        }}\n      >\n        Sign Out\n      </button>\n      <Selections\n        selectionValues={selectionValues}\n        setSelectionValues={setSelectionValues}\n        allMetaCats={allMetaCats}\n        allTimes={allTimes}\n        metaCategories={settings.metaCategories[selectionValues.metaCatVersion]}\n        allTags={allTags}\n      />\n      {waitForLoad ? (\n        <h3 style={{ textAlign: \"center\" }}>Waiting for data to load...</h3>\n      ) : (\n        <>\n          <Accordion defaultActiveKey=\"0\">\n            <Accordion.Toggle eventKey=\"0\">Toggle Plot</Accordion.Toggle>\n            <Accordion.Collapse eventKey=\"0\">\n              <Plot\n                plotTx={allTx}\n                selectionValues={selectionValues}\n                setTableFilters={setTableFilters}\n              />\n            </Accordion.Collapse>\n          </Accordion>\n          <hr />\n          <Accordion defaultActiveKey=\"0\">\n            <Accordion.Toggle eventKey=\"0\">Toggle Table</Accordion.Toggle>\n            <Accordion.Collapse eventKey=\"0\">\n              <Table transactions={allTx} filterValues={tableFilters} />\n            </Accordion.Collapse>\n          </Accordion>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default Home;\n","import CSVReader from \"react-csv-reader\";\nimport { db } from \"../firebase\";\nimport { sortedUniqueArray } from \"../utils/utils\";\n\nconst monthsRef = db.collection(\"months\");\n\nconst LoadData = () => {\n  const papaparseOptions = {\n    header: true,\n    dynamicTyping: true,\n    skipEmptyLines: true,\n    transformHeader: (header) => header.toLowerCase().replace(/\\W/g, \"_\"),\n  };\n  return (\n    <CSVReader\n      cssClass=\"csv-reader-input\"\n      label=\"Select CSV to upload\"\n      parserOptions={papaparseOptions}\n      onFileLoaded={uploadData}\n      onError={(e) => console.log(e)}\n    />\n  );\n};\n\nconst uploadData = async (data) => {\n  for (let d of data) {\n    d.date = new Date(Date.parse(d.date)).toISOString().substring(0, 10);\n  }\n  const allMonths = sortedUniqueArray({\n    array: data.map((d) => d.date.slice(0, 7)),\n  });\n  let oldMonthTx = {};\n  let newMonthTx = {};\n  for (const m of allMonths) {\n    newMonthTx[m] = [];\n    oldMonthTx[m] = await getMonthObject(m);\n  }\n  data.map((d) => {\n    return newMonthTx[d.date.slice(0, 7)].push(d);\n  });\n  for (const m of allMonths) {\n    let allTx = oldMonthTx[m].concat(newMonthTx[m]);\n    monthsRef\n      .doc(m)\n      .set({ transactions: allTx }, { merge: true })\n      .then(() => {\n        window.alert(\"Transactions uploaded successfully for month \" + m);\n      })\n      .catch((e) => {\n        window.alert(\"There was an issue uploading the transactions: \", e);\n      });\n  }\n};\n\nconst getMonthObject = async (m) => {\n  let monthObject = await queryForMonthObject(m);\n  return monthObject.transactions || [];\n};\n\nconst queryForMonthObject = (m) => {\n  let monthData = monthsRef\n    .doc(m)\n    .get()\n    .then(function (doc) {\n      if (doc.exists) {\n        return doc.data();\n      } else {\n        newMonthFunc(m);\n        return { transactions: [] };\n      }\n    })\n    .catch(function (error) {\n      console.log(\"Error getting documents: \", error);\n      return null;\n    });\n  return monthData;\n};\n\nfunction newMonthFunc(m) {\n  const generalSettingsRef = db.doc(\"settings/general\");\n  generalSettingsRef\n    .get()\n    .then(function (doc) {\n      const data = doc.data();\n      if (m < data.minMonth) {\n        generalSettingsRef.set({ minMonth: m }, { merge: true });\n      } else if (m > data.maxMonth) {\n        generalSettingsRef.set({ maxMonth: m }, { merge: true });\n      }\n    })\n    .catch(function (error) {\n      console.log(\"Error getting settings: \", error);\n      return null;\n    });\n}\n\nexport default LoadData;\n\nexport { monthsRef, newMonthFunc };\n","import { Navbar, Nav } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\n\nconst NavMenu = () => {\n  return (\n    <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\n      <Navbar.Brand as={Link} to=\"/fin-trans\">\n        Transactions\n      </Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n      <Navbar.Collapse id=\"basic-navbar-nav\">\n        <Nav className=\"mr-auto\">\n          <Nav.Link as={Link} to=\"/fin-trans/upload\">\n            Upload\n          </Nav.Link>\n          <Nav.Link as={Link} to=\"/fin-trans/edit\">\n            Edit\n          </Nav.Link>\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n};\n\nexport default NavMenu;\n","import MaterialTable from \"material-table\";\nimport React, { useContext, useState } from \"react\";\nimport { Prompt } from \"react-router\";\nimport { AuthContext } from \"../auth/Auth\";\nimport { monthsRef, newMonthFunc } from \"../loadData/LoadData\";\nimport tableIcons from \"../table/tableIcons\";\nimport { sortedUniqueArray } from \"../utils/utils\";\n\nconst EditTransactions = () => {\n  const { currentUser, txData } = useContext(AuthContext);\n  const [modifiedMonths, setModifiedMonths] = useState([]);\n  const getTableDataFromTxData = () => {\n    const tData = [];\n    for (const dArray of Object.values(txData || {})) {\n      for (const d of dArray) {\n        if (!!d.tags) {\n          d.tags = typeof d.tags === \"string\" ? d.tags : d.tags.join(\",\");\n        }\n        tData.push(d);\n      }\n    }\n    return tData;\n  };\n  const [tableData, setTableData] = useState(getTableDataFromTxData());\n  if (!currentUser) {\n    return <div>Loading...</div>;\n  }\n  const saveChanges = () => {\n    for (const m of sortedUniqueArray({ array: modifiedMonths })) {\n      const monthData = tableData.filter((d) => d.date.slice(0, 7) === m);\n      monthsRef\n        .doc(m)\n        .set({ transactions: monthData }, { merge: true })\n        .then(() => {\n          window.alert(\"Transactions uploaded successfully for month \" + m);\n        })\n        .catch((e) => {\n          window.alert(\"There was an issue uploading the transactions: \", e);\n        });\n      if (!Object.keys(txData).includes(m)) {\n        newMonthFunc(m);\n      }\n    }\n    setModifiedMonths([]);\n  };\n  const columns = [\n    { title: \"Date\", field: \"date\", defaultSort: \"desc\" },\n    { title: \"Description\", field: \"description\" },\n    { title: \"Amount\", field: \"amount\" },\n    { title: \"Category\", field: \"category\" },\n    { title: \"Comments\", field: \"comments\" },\n    { title: \"Tags\", field: \"tags\" },\n    { title: \"Account\", field: \"account\" },\n    { title: \"Amortization (Months)\", field: \"amortize\" },\n  ];\n  return (\n    <div>\n      <button\n        onClick={() => {\n          setTableData(getTableDataFromTxData());\n          setModifiedMonths([]);\n        }}\n      >\n        Undo All\n      </button>\n      <button onClick={saveChanges}>Save All</button>\n      <Prompt\n        when={modifiedMonths.length > 0}\n        message={\n          \"You have unsaved changes. Please either save or undo changes.\"\n        }\n      />\n      <MaterialTable\n        title={\"Raw Transaction Data\"}\n        data={tableData}\n        columns={columns}\n        icons={tableIcons}\n        options={{ filtering: true }}\n        editable={{\n          onRowAdd: (newData) =>\n            new Promise((resolve, reject) => {\n              setTimeout(() => {\n                setTableData([...tableData, newData]);\n                setModifiedMonths([\n                  ...modifiedMonths,\n                  newData.date.slice(0, 7),\n                ]);\n                resolve();\n              }, 1000);\n            }),\n          onRowUpdate: (newData, oldData) =>\n            new Promise((resolve, reject) => {\n              setTimeout(() => {\n                const dataUpdate = [...tableData];\n                const index = oldData.tableData.id;\n                dataUpdate[index] = newData;\n                setTableData([...dataUpdate]);\n                setModifiedMonths([\n                  ...modifiedMonths,\n                  newData.date.slice(0, 7),\n                  oldData.date.slice(0, 7),\n                ]);\n                resolve();\n              }, 1000);\n            }),\n          onRowDelete: (oldData) =>\n            new Promise((resolve, reject) => {\n              setTimeout(() => {\n                const dataDelete = [...tableData];\n                const index = oldData.tableData.id;\n                dataDelete.splice(index, 1);\n                setTableData([...dataDelete]);\n                setModifiedMonths([\n                  ...modifiedMonths,\n                  oldData.date.slice(0, 7),\n                ]);\n                resolve();\n              }, 1000);\n            }),\n        }}\n      />\n    </div>\n  );\n};\n\nexport default EditTransactions;\n","import Login from \"./auth/Login\";\nimport Home from \"./Home\";\nimport LoadData from \"./loadData/LoadData\";\nimport NavMenu from \"./nav/Nav\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { AuthProvider } from \"./auth/Auth\";\nimport EditTransactions from \"./edit/EditTransactions\";\n\nconst App = () => {\n  return (\n    <AuthProvider>\n      <Router>\n        <NavMenu />\n        <Switch>\n          <div style={{ margin: \"5pt\" }}>\n            <Route exact path=\"/fin-trans\" component={Home} />\n            <Route exact path=\"/fin-trans/login\" component={Login} />\n            <Route exact path=\"/fin-trans/upload\" component={LoadData} />\n            <Route exact path=\"/fin-trans/edit\" component={EditTransactions} />\n          </div>\n        </Switch>\n      </Router>\n    </AuthProvider>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}